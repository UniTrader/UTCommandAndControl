<?xml version="1.0" encoding="UTF-8"?>
<aiscript name="ut.cac.com.defense.launchdrones" version="30" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
  <!--
Drone Launching Sub-Script for the DO which is called in Battlestate yellow and red
-->


  <params>
    <param name="exittime" default="player.age + 1h" comment="gametime at which this Script should return to perform other actions in the main script (default 1h, more than enough to undock all drones)"/>
    <param name="missiledefense" comment="drone managment group to pass to the Drones"/>
    <param name="attack" comment="drone managment group to pass to the Drones"/>
    <param name="defense" comment="drone managment group to pass to the Drones"/>
  </params>
  <init>
  </init>
  <interrupts>
  </interrupts>
  <!-- only visible attention since drones dont exist OOS -->
  <attention min="visible">
    <actions>
      <!-- Start Drones until next Enemy Scan -->
      <debug_text filter="general" chance="@this.$debug * 100" text="'launching Drones'"/>
      <!-- find all drone bays, including broken ones, so we can use them when operational (search is only performed once, and at each loop the state of the individual bays is checked) -->
      <find_object_component name="$dronelaunchbays" object="this.container" multiple="true" class="class.dronelaunchpad" checkoperational="false"/>
      <do_if value=" $dronelaunchbays.count">
        <do_while value="player.age le $exittime and this.ship.availableunits.{unitcategory.defence}.count and not this.ship.isboostactive">
          <do_all exact="[$dronelaunchbays.count, this.ship.availableunits.{unitcategory.defence}.count].min" counter="$i">
            <do_if value="$dronelaunchbays.{$i}.isoperational">
              <launch_drone name="$drone" object="$dronelaunchbays.{$i}" group="unitcategory.defence" macro="units.{unitcategory.defence}.list.random" exact="1"/>
              <do_if value="$drone.isoperational">
                <do_if value="$drone.macro.ismacro.{[macro.units_size_drone_attackdrone_impulse_mk1_macro,macro.units_size_drone_attackdrone_impulse_mk2_macro,macro.units_size_drone_swarm_xen_interceptor_drone_macro]}">
                  <set_value name="$pass_group" exact="$missiledefense"/>
                </do_if>
                <do_elseif value="$drone.macro.ismacro.{[macro.units_size_drone_attackdrone_plasma_mk1_macro,macro.units_size_drone_attackdrone_plasma_mk2_macro]}">
                  <set_value name="$pass_group" exact="$defense"/>
                </do_elseif>
                <do_elseif value="$drone.macro.ismacro.{[macro.units_size_drone_missiledrone_dumbfire_mk1_macro,macrounits_size_drone_missiledrone_dumbfire_mk1_macroo]}">
                  <set_value name="$pass_group" exact="$attack"/>
                </do_elseif>
                <set_object_commander object="$drone" commander="this.ship"/>
                <start_script object="$drone.pilot" name="'ut.cac.com.drone.main'">
                  <param name="freedrones" value="$pass_group"/>
               </start_script>
              </do_if>
            </do_if>
          </do_all>
          <wait min="1.5s" max="2.5s" resume="true"/>
        </do_while>
      </do_if>
    </actions>
  </attention>
  <on_abort>
  </on_abort>
</aiscript>
