<?xml version="1.0" encoding="UTF-8"?>
<aiscript name="ut.cac.com.drone.combat.main" version="30" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
<!--
Main Script for Combat Drones to support the DO of the mothership

=> usually flies in Formation around the Mothership until enemy contact
  -> For Stations the Area is "patrolled" instead (flying to random Locations in the Stations Area)
=> Fights against Targets designated by DO (Ships or Missiles) either constantly or does one Attack Run on it (fast Missiles)
=> also some simple looking for the next enemy is included to avoid unnecesary round trips
=> looks for Recall Signal on Mother Ship, decides if it can reach it in the specified time and docks there if possible (if not it will attack any enemy in its Range and when none found blow up)

-->


  <params>
    <param name="dronesgroup" comment="Drone Managment Group of the DO - included ones are available for Orders, excluded ones not."/>
  </params>
  <init>
  </init>
  <interrupts>
     <handler comment="handler for managing DO commands">
        <conditions>
          <event_object_signalled object="this.ship"/>
          <check_value value="not $amok_mode?"/>
        </conditions>
        <actions>
          <do_if value="event.param == 'execute order'">
            <run_interrupt_script name="event.param2.$script" resume="start" abortscripts="true">
              <param name="params" value="event.param2"/>
            </run_interrupt_script>
          </do_if>
          <do_else>
            <debug_text filter="error" text="'%1 %2 %3 Unknown Signal: %4 %5 %6'.[player.age,this.name,this.container.name,this.ship.name,this.ship.zone.name,event.param,event.param2,event.param3]"/>
          </do_else>
        </actions>
      </handler>
      <handler comment="listener for return signal">
        <conditions>
          <event_object_signalled object="this.ship.commander" param="'recall drones'"/>
          <check_value value="not $amok_mode?"/>
        </conditions>
        <actions>
          <!-- check if we can return in the specified time (event.param2) and return, otherwise start independently shooting enemies -->
          <do_if value="not event.param2 or (this.ship.speed * event.param2 gt this.ship.distanceto.{this.ship.commander} )">
            <set_value name="$leader_preparegroup" exact="event.param3"/>
            <add_to_group object="this.ship" groupname="$leader_preparegroup"/>
            <run_interrupt_script name="'move.dockat.drone'">
              <param name="destination" value="this.ship.commander" />
            </run_interrupt_script>
          </do_if>
          <do_else>
            <resume label="run amok"/>
          </do_else>
        </actions>
      </handler>
  </interrupts>
  <attention min="visible">
    <actions>
      <label name="init"/>
      <!-- wait until we're done launching -->
      <do_if value="this.ship.numwaypoints">
        <wait>
          <interrupt>
            <conditions>
              <check_any>
                <!-- <event_object_approaching_waypoint object="this.ship" lastwaypoint="true" /> -->
                <event_object_arrived_at_waypoint object="this.ship" lastwaypoint="true"/>
              </check_any>
            </conditions>
          </interrupt>
        </wait>
      </do_if>
      <label name="start"/>
      <join_formation object="this.ship" leader="this.ship.commander"/>
      <wait/>
      <resume label="start"/>
      <label name="run amok"/>
      <!-- no chance to return in time - leave Commander, shoot targets independently and finally self-destruct -->
      <remove_from_group object="this.ship" group="event.param3" comment="we shouldnt be part of this Group, but better be safe.."/>
      <remove_units object="this.ship.commander" macro="this.ship.macro" exact="1" unavailable="true"/>
      <remove_object_commander object="this.ship"/>
      <set_value name="$amok_mode"/>
      <run_script name="'move.seekenemies'">
        <param name="destination" value="this.zone"/>
        <param name="pos" value="this.ship.position"/>
      </run_script>
      <destroy_object object="this.ship"/>
    </actions>
  </attention>
  <attention min="unknown">
    <actions>
      <label name="init"/>
      <label name="start"/>
      
      <!-- cleanup -->
      <do_if value="this.ship.commander.isoperational">
        <run_script name="'move.dockat.drone'">
          <param name="destination" value="this.ship.commander" />
        </run_script>
      </do_if>
      <do_else>
        <destroy_object object="this.ship" explosion="false" />
      </do_else>
      <debug_text filter="error" text="'%1 %2 %3 Drone %4 %5 still exists after docking/destruct'.[player.age,this.name,this.container.name,this.ship.name,this.ship.zone.name]"/>
      <label name="run amok"/>
      <destroy_object object="this.ship" explosion="false" />
    </actions>
  </attention>
  <on_abort>
    <!-- Script Terminated - set Drones into self-destruct mode and pass them as group via signal, so a replacement DO can recover them -->
  </on_abort>
</aiscript>
