<?xml version="1.0" encoding="UTF-8" ?>
<aiscript name="ut.cac.com.captain.restockdrones" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
  <!--
    This Script attempts to Restock the Drones on the current Ship.
    -> first it looks up the intended Amount for all drones using a lib
    -> then it finds Buy Offers in the current Sector and temporarily stores them
    -> as next it adds these buy Orders (nearest first, them from this the nearest etc.) to the Trade List and adds a single Trade run per item to this.$orderlist
    -> next it looks in the Cluster for Tradeoffers of the remaining Wares which couldnt be bought and then continues in this Sector to Buy drones (can be turned off)
    -> as last all Cargo which cannt be sold is thrown out (Selling stuff can be skipped if the Cargobay should just be emptied)
    
    Note: this Script is just a quick and dirty way to make sure all managed Ships are properly equipped with Drones - i know it is not the optimum, but you have to start somewhere.
  -->
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
    <param name="onlysector" default="false" comment="dont switch the Sector when looking for Sell Offers" />
  </params>
  <attention min="unknown">
    <actions>
      <do_if value="$params">
        <do_if value="$params.$onlysector?">
          <set_value name="$onlysector" exact="$params.$onlysector"/>
        </do_if>
      </do_if>
      
      <!-- first confirm that we can still buy some Drones - if not just exit -->
      <do_if value="this.ship.units.count == this.ship.units.maxcount">
        <return/>
      </do_if>
      
      <!-- create actor account to prevent using Player Money -->
      <do_if value="not this.hasownaccount">
        <set_actor_account actor="this"/>
      </do_if>
      
      <!-- get the Amount of Drones we want - calculated in a seperate lib -->
      <run_script name="'ut.cac.lib.calculatedroneamount'" result="$droneamounts" >
        <param name="object" value="this.ship"/>
        <param name="additionalunits" value="true"/>
      </run_script>
      
      <!-- create List of Drones to buy -->
      <set_value name="$unitcategorylist" exact="$droneamounts.keys.list"/>
      <create_list name="$selloffers" />
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Trying so buy these Units somewhere:\n%4'.[player.age,this.name,this.container.name,$droneamounts]"/>
      
      <!-- first check Homebase if there is stuff we can Grab there -->
      <!--do_if value="this.ship.commander.exists">
        <do_all exact="$unitcategorylist.count" counter="$i" reverse="true">
          <find_sell_offer result="$selloffer" buyer="this.ship.commander" wares="param.ut_cac.warelookup.{$unitcategorylist.{$i}}" multiple="false" knowntoplayer="this.owner == faction.player">
            <amount min="$droneamounts.{$unitcategorylist.{$i}}"/>
          </find_sell_offer>
          <do_if value="$selloffer.available">
            <append_to_list name="$selloffers" exact="$selloffer"/>
            <remove_value name="$unitcategorylist.{$i}"/>
          </do_if>
        </do_all>
      </do_if-->
      
      <set_value name="$sector" exact="this.sector"/>
      <label name="search sector"/>
      <!-- find buy Offers in current Sector where we can loose the whole amount in one trade run -->
      <do_all exact="$unitcategorylist.count" counter="$i" reverse="true">
        <find_sell_offer result="$selloffer" space="$sector" wares="param.ut_cac.warelookup.{$unitcategorylist.{$i}}" multiple="false" knowntoplayer="this.owner == faction.player"/>
        <do_if value="$selloffer.available">
          <append_to_list name="$selloffers" exact="$selloffer"/>
          <set_value name="$droneamounts.{$selloffer.ware}" exact="$droneamounts.{$unitcategorylist.{$i}}"/>
          <remove_value name="$unitcategorylist.{$i}"/>
        </do_if>
      </do_all>
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Found %4 Sell Offers in sector'.[player.age,this.name,this.container.name,$selloffers.count]"/>
      
      <!-- add these Sell Orders to the Trading Queue sorted by shortest Distance to next Trade and add a Trade run order for each -->
      <set_value name="$currentzone" exact="this.zone"/>
      <!-- Path Length for small Ships, raw Distance for Big Ships -->
      <do_if value="this.ship.isclass.ship_m or this.ship.isclass.ship_s or this.ship.isclass.ship_xs">
        <set_value name="$mindistance" exact="999"/>
      </do_if>
      <do_else>
        <set_value name="$mindistance" exact="1e12m"/>
      </do_else>
      <set_value name="$mindistindex" exact="null"/>
      <do_while value="$selloffers.count">
        <do_all exact="$selloffers.count" counter="$i" reverse="true">
          <!-- Offer is in current Zone - just add it to the Trade Orders -->
          <do_if value="$selloffers.{$i}.owner.zone == $currentzone">
            <set_value name="$amount" exact="[this.container.commanderentity.money/$selloffers.{$i}.unitprice , $selloffers.{$i}.amount, $droneamounts.{$selloffers.{$i}.ware}].min"/>
            <do_if value="$amount gt 0">
              <transfer_money from="this.container.commanderentity" to="this" amount="$amount * $selloffers.{$i}.unitprice"/>
            </do_if>
            <do_else>
              <!-- Cannt buy these Drones - try the next ones.. -->
              <remove_value name="$selloffers.{$i}"/>
              <do_if value="$mindistindex">
                <set_value name="$mindistindex" operation="subtract" comment="to keep them in sync"/>
              </do_if>
              <continue/>
            </do_else>
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Adding Offer to Trade List (same Zone):\n%4'.[player.age,this.name,this.container.name,$selloffers.{$i}]"/>
            <add_buy_order object="this.ship" trade="$selloffers.{$i}" amount="$amount" price="$selloffers.{$i}.unitprice" unbundle="true"/>
            <signal_objects object="this" param="'new order'" param2="table[$script='ut.cac.com.captain.performsingletraderun',$displayname='Traderun (Restock Drones)',$repeat=0]"/>
            <remove_value name="$selloffers.{$i}"/>
            <do_if value="$mindistindex">
              <set_value name="$mindistindex" operation="subtract" comment="to keep them in sync"/>
            </do_if>
          </do_if>
          <!-- Offer is somewhere else - if its closer than the previous Offer save it, if not wait for next iteration -->
          <!-- Use Tube Network for small Ships... -->
          <do_elseif value="this.ship.isclass.ship_m or this.ship.isclass.ship_s or this.ship.isclass.ship_xs">
            <get_global_path component="$result" multiple="true" usehighways="true">
              <start object="this.ship"/>
              <end object="$selloffers.{$i}.owner"/>
            </get_global_path>
            <do_if value="$result.count lt $mindistance">
              <set_value name="$mindistance" exact="this.ship.distanceto.{$selloffers.{$i}.owner}"/>
              <set_value name="$mindistindex" exact="$i"/>
            </do_if>
          </do_elseif>
          <!-- ...or Raw Distance for Big Ships -->
          <do_elseif value="this.ship.distanceto.{$selloffers.{$i}.owner} lt $mindistance">
            <set_value name="$mindistance" exact="this.ship.distanceto.{$selloffers.{$i}.owner}"/>
            <set_value name="$mindistindex" exact="$i"/>
          </do_elseif>
        </do_all>
        <!-- add nearest Offer in a diffrent Zone to the Trade List and set it as new origin Point -->
        <do_if value="$mindistindex">
          <set_value name="$amount" exact="[(if this.container.commanderentity then this.container.commanderentity.money else this.$ut_cac.$commanderentity.money) / $selloffers.{$mindistindex}.unitprice , $selloffers.{$mindistindex}.amount , $droneamounts.{$selloffers.{$mindistindex}.ware} ].min" />
          <do_if value="$amount gt 0">
            <transfer_money from="if this.container.commanderentity then this.container.commanderentity.money else this.$ut_cac.$commanderentity" to="this" amount="$amount * $selloffers.{$mindistindex}.unitprice"/>
          </do_if>
          <!-- Cannt buy these Drones - try the next ones.. -->
          <do_else>
            <remove_value name="$selloffers.{$mindistindex}"/>
            <!-- Path Length for small Ships, raw Distance for Big Ships -->
            <do_if value="this.ship.isclass.ship_m or this.ship.isclass.ship_s or this.ship.isclass.ship_xs">
              <set_value name="$mindistance" exact="999"/>
            </do_if>
            <do_else>
              <set_value name="$mindistance" exact="1e12m"/>
            </do_else>
            <set_value name="$mindistindex" exact="null"/>
            <continue/>
          </do_else>
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Adding Offer to Trade List (mindist):\n%4'.[player.age,this.name,this.container.name,$selloffers.{$mindistindex}]"/>
          <add_buy_order object="this.ship" trade="$selloffers.{$mindistindex}" amount="$amount" price="$selloffers.{$mindistindex}.unitprice" unbundle="true"/>
          <signal_objects object="this" param="'new order'" param2="table[$script='ut.cac.com.captain.performsingletraderun',$displayname='Traderun (Restock Drones)',$command=command.freetrade]"/>
          <set_value name="$currentzone" exact="$selloffers.{$mindistindex}.owner.zone"/>
          <remove_value name="$selloffers.{$mindistindex}"/>
        </do_if>
        <!-- Path Length for small Ships, raw Distance for Big Ships -->
        <do_if value="this.ship.isclass.ship_m or this.ship.isclass.ship_s or this.ship.isclass.ship_xs">
          <set_value name="$mindistance" exact="999"/>
        </do_if>
        <do_else>
          <set_value name="$mindistance" exact="1e12m"/>
        </do_else>
        <set_value name="$mindistindex" exact="null"/>
      </do_while>
      
      
      <!-- Cluster-wide search for Offers - if one is found add it to the Trade list and continue in the Sector there with search for further Offers -->
      <do_if value="not $onlysector">
        <do_all exact="$unitcategorylist.count" counter="$i" reverse="true">
          <find_sell_offer result="$selloffer" space="this.cluster" wares="param.ut_cac.warelookup.{$unitcategorylist.{$i}}" multiple="false" knowntoplayer="this.owner == faction.player">
            <amount min="$droneamounts.{$unitcategorylist.{$i}}"/>
          </find_sell_offer>
          <do_if value="$selloffer.available">
            <append_to_list name="$selloffers" exact="$selloffer"/>
            <set_value name="$droneamounts.{$selloffer.ware}" exact="$droneamounts.{$unitcategorylist.{$i}}"/>
            <remove_value name="$unitcategorylist.{$i}"/>
            <set_value name="$sector" exact="$selloffer.owner.sector"/>
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Found Trade Offer in another Sector, continuing there:\n%4'.[player.age,this.name,this.container.name,$selloffer]"/>
            <resume label="search sector" comment="goto line 47"/>
          </do_if>
        </do_all>
      </do_if>
      
    </actions>
  </attention>
  <on_abort>
  </on_abort>
</aiscript>