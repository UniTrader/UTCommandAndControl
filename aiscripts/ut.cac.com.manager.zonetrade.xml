<?xml version="1.0" encoding="UTF-8"?>
<aiscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="ut.cac.com.manager.zonetrade" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd" version="1">
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
  </params>
  <attention min="unknown">
    <actions>
      <do_if value="$params.$cleanup?">
        <resume label="cleanup"/>
      </do_if>
      <label name="start"/>
      <!-- Zone Trading with Cargo Drones - copied from Vanilla for now -->
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Doing a Zone Trade Run for now'.[player.age,this.name,this.container.name]"/>
      <set_command_action commandaction="commandaction.searchingtrades"/>
      <do_if value="this.$ut_cac?"><set_value name="this.$ut_cac.$isactive"/></do_if>
      <set_value name="$buyoffer" exact="null"/>
      <!-- find the best trade opportunity -->
      <find_buy_offer buyer="this.container" result="$buyoffers" multiple="true">
        <stocklevel min="0.2"/>
      </find_buy_offer>
      <do_if value="$buyoffers.count gt 0">
        <create_list name="$buywares"/>
        <!-- build list of wares that we are interested in -->
        <do_all exact="$buyoffers.count" counter="$i">
          <append_to_list name="$buywares" exact="$buyoffers.{$i}.ware"/>
        </do_all>
        <find_sell_offer tradepartner="this.container" wares="$buywares" space="this.container.zone" result="$selloffers" multiple="true">
          <stocklevel min="0.2"/>
        </find_sell_offer>
        <remove_value name="$buywares"/>
        <do_all exact="$selloffers.count" counter="$j" reverse="true">
          <set_value name="$currentselloffer" exact="$selloffers.{$j}"/>
          <set_value name="$currentware" exact="$currentselloffer.ware"/>
          <!-- we don't want two stations shipping the same tradeware back and forth, so check if ware is a tradeware on both stations and negate -->
          <do_if value="this.container.tradewares.{$currentware}.exists and $currentselloffer.seller.tradewares.{$currentware}.exists">
            <remove_value name="$selloffers.{$j}"/>
          </do_if>
        </do_all>
        <sort_trades name="$selloffers" tradelist="$selloffers" sorter="relativeprice"/>
        <do_all exact="$buyoffers.count">
          <!-- find the selloffer with the highest amount -->
          <set_value name="$currentbuyoffer" exact="$buyoffers.random"/>
          <set_value name="$offerindex" exact="$buyoffers.indexof.{$currentbuyoffer}"/>
          <remove_value name="$buyoffers.{$offerindex}"/>
          <remove_value name="$offerindex"/>
          <set_value name="$currentware" exact="$currentbuyoffer.ware"/>
          <set_value name="$maxsellamount" exact="0"/>
          <set_value name="$selloffer" exact="null"/>
          <do_all exact="$selloffers.count" counter="$j">
            <set_value name="$currentselloffer" exact="$selloffers.{$j}"/>
            <do_if value="$currentselloffer.ware == $currentware">
              <!-- we don't want two stations shipping the same tradeware back and forth, so check if ware is a tradeware on both stations and negate -->
              <do_if value="this.container.tradewares.{$currentware}.exists and $currentselloffer.seller.tradewares.{$currentware}.exists" negate="true">
                <set_value name="$finalamount" exact="$currentselloffer.offeramount.{this}"/>
                <do_if value="$currentbuyoffer.amount lt $currentselloffer.offeramount.{this}">
                  <set_value name="$finalamount" exact="$currentbuyoffer.amount"/>
                </do_if>
                <do_if value="$finalamount * $currentware.volume gt 100000">
                  <!-- cap the max trade volume at 100000 to avoid super-long huge trades -->
                  <set_value name="$finalamount" exact="100000 / $currentware.volume"/>
                </do_if>
                <set_value name="$finalselloffer" exact="$currentselloffer"/>
                <set_value name="$buyoffer" exact="$currentbuyoffer"/>
                <break/>
              </do_if>
            </do_if>
          </do_all>
          <do_if value="$selloffer">
            <break/>
          </do_if>
        </do_all>
      </do_if>
      <remove_value name="$buyoffers"/>
      <remove_value name="$selloffers"/>
      <!-- execute the trade -->
      <do_if value="$buyoffer.exists">
        <set_value name="$tradestart" exact="player.age"/>
        <set_value name="$tradeware" exact="$finalselloffer.ware"/>
        <do_if value="$buyoffer.unbundle">
          <set_value name="$unbundle" exact="true"/>
        </do_if>
        <do_if value="not $unbundle?">
          <!-- use a 2hour duration for station trades, as these can be inherently slower -->
          <add_ware_reservation object="this.container" entity="this" ware="$tradeware" amount="$finalamount" result="$reserved" duration="3h" type="sell"/>
          <!-- DEBUG ONLY START -->
          <set_value name="$d_startamount" exact="this.container.cargo.{$tradeware}.count"/>
          <!-- DEBUG ONLY END -->
        </do_if>
        <set_command command="command.trade" param="$finalselloffer.seller"/>
        <do_if value="this.$ut_cac?"><set_value name="this.$ut_cac.$isactive"/></do_if>
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Manager Zonetrade Executing Trade'.[player.age,this.name]"/>
        <show_notification caption="'Manager does Zonetrade!!!'" details="'Ware: %1\nAmount: %2\nTradepartner: %3'.[$finalselloffer.ware,$finalamount,$finalselloffer.owner.knownname]"/>
        <execute_trade tradeoffer="$finalselloffer" amount="$finalamount" tradepartner="this.container" result="$traderesult" unbundle="$unbundle?">
          <interrupt_after_time time="3s"/>
        </execute_trade>
        <set_value name="this.$ut_cac.$currenttrade" exact="$finalselloffer"/>
      </do_if>
      <resume label="finish"/>
      <!-- Cleanup Order is added via MD when the Trade is completed, but actual cleanup is done vie AI because only here the reservation can be removed - this seperation is done to prevent a blocking of the Manager during a Zone Trade -->
      <label name="cleanup"/>
        <do_if value="$params.$trade == this.$ut_cac.$currenttrade">
          <remove_ware_reservation object="this.container" entity="this" ware="$params.$trade.ware"/>
          <remove_value name="this.$ut_cac.$currenttrade"/>
          <wait exact="3s"/>
          <!-- no need to call detach_from_masstraffic since stations in the same zone are linked with a static network that persists anyway -->
        </do_if>
      
      <label name="finish"/>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Manager Zonetrade Script finished'.[player.age,this.name,this.container.name] + ( if this.$ut_cac.$currenttrade then ' - executing Trade %1'.[$finalselloffer] )"/>
      
      <return>
        <retval name="repeat" value="false"/>
      </return>
    </actions>
  </attention>
</aiscript>
