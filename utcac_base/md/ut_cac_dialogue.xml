<?xml version="1.0" encoding="UTF-8"?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="UT_CAC_Dialogue" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/md.xsd">
  <documentation>
    <author alias="UniTrader"/>
    <content description="Main Dialogue Script used by all UT CaC Entites - no instances, Dialogue is all shared.
    Will refer to/include other Scripts for individual, Employee-Specific functions
    (Wages, Possible Orders and Settings etc.)"/>
  </documentation>
  <cues>
    <!--cue name="Clone_Actor" instantiate="true">
      <conditions>
        <event_object_signalled object="player.galaxy" param="'clone actor'"/>
      </conditions>
      <actions>
        <create_platform_actor name="$clone" dockingbay="event.param3" type="event.param2.type" macro="event.param2.macro">
          <name name="event.param2.name"/>
          <owner exact="event.param2.owner"/>
          <page exact="event.param2.page"/>
          <skills>
            <skill type="boarding" exact="event.param2.skill.boarding"/>
            <skill type="combat" exact="event.param2.skill.combat"/>
            <skill type="engineering" exact="event.param2.skill.engineering"/>
            <skill type="leadership" exact="event.param2.skill.leadership"/>
            <skill type="management" exact="event.param2.skill.management"/>
            <skill type="morale" exact="event.param2.skill.morale"/>
            <skill type="navigation" exact="event.param2.skill.navigation"/>
            <skill type="science" exact="event.param2.skill.science"/>
          </skills>
        </create_platform_actor>
        <set_value name="$clone.$ut_cac" exact="event.param2.$ut_cac.clone"/>
        <set_value name="$clone.$experience" exact="event.param2.$experience"/>
        <signal_cue_instantly cue="Actor_Init" param="$clone"/>
      </actions>
    </cue-->
    <cue name="Actor_Init" instantiate="true">
      <!-- This Cue is intended to put an Entity into the right State to perform its Job as a certain Entity Type. Also used when changing the Entity Type. does not reset Settings (except where it might interfer with function). if desired delete $actor.$ut_cac before (this also resets Skill Progress) -->
      <conditions>
        <event_cue_signalled cue="this"/>
      </conditions>
      <actions>
        <!--reset_cue cue="this"/-->
        
        <set_value name="$actor" exact="event.param"/>
        
        <!-- set up Variables -->
        <do_if value="not $actor.$ut_cac?">
          <set_value name="$actor.$ut_cac" exact="table[]"/>
        </do_if>
        
        <!-- declare that the Actor has an individual Conversation tree (not really individual, but applies to all NPCs which have a $ut_cac Blackboard Var) -->
        <!-- cancel Vanilla Dialogue -->
        <signal_objects object="$actor" param="'cancel Vanilla dialogue tree'"/>
        <set_comm_handler actor="$actor" customhandler="true" />
        
        <!-- set up Common Vars -->
        <do_if value="not $actor.$ut_cac.$pesterlevel?">
          <set_value name="$actor.$ut_cac.$pesterlevel" exact="param.ut_cac.setting_defaults.$pesterlevel"/>
        </do_if>
        <do_if value="not $actor.$ut_cac.$loglevel?">
          <set_value name="$actor.$ut_cac.$loglevel" exact="param.ut_cac.setting_defaults.$loglevel"/>
        </do_if>
        
        <do_if value="not $actor.$experience?">
          <set_value name="$actor.$experience" exact="table[]"/>
          <set_value name="$actor.$experience.{skilltype.boarding}" exact="if $actor.skill.boarding then param.ut_cac.experience.{skilltype.boarding}.{$actor.skill.boarding} else 0"/>
          <set_value name="$actor.$experience.{skilltype.combat}" exact="if $actor.skill.combat then param.ut_cac.experience.{skilltype.combat}.{$actor.skill.combat} else 0"/>
          <set_value name="$actor.$experience.{skilltype.engineering}" exact="if $actor.skill.engineering then param.ut_cac.experience.{skilltype.engineering}.{$actor.skill.engineering} else 0"/>
          <set_value name="$actor.$experience.{skilltype.leadership}" exact="if $actor.skill.leadership then param.ut_cac.experience.{skilltype.leadership}.{$actor.skill.leadership} else 0"/>
          <set_value name="$actor.$experience.{skilltype.management}" exact="if $actor.skill.management then param.ut_cac.experience.{skilltype.management}.{$actor.skill.management} else 0"/>
          <set_value name="$actor.$experience.{skilltype.morale}" exact="if $actor.skill.morale then param.ut_cac.experience.{skilltype.morale}.{$actor.skill.morale} else 0"/>
          <set_value name="$actor.$experience.{skilltype.navigation}" exact="if $actor.skill.navigation then param.ut_cac.experience.{skilltype.navigation}.{$actor.skill.navigation} else 0"/>
          <set_value name="$actor.$experience.{skilltype.science}" exact="if $actor.skill.science then param.ut_cac.experience.{skilltype.science}.{$actor.skill.science} else 0"/>
        </do_if>
        
        
        <!-- Compatibility with Vim Razz' Human Ressources -->
        <set_value name="$actor.$InUse" exact="true"/>
        
      </actions>
      <cues>
        <cue name="Delayed_Scriptstart">
          <delay min="10ms" max="1s"/>
          <actions>
            <!-- If Orderlist is not set up yet: Start Orderlist Loop, and set endless waiting as default Order (this assumes the NPC has no Job yet)-->
            <do_if value="not $actor.$orderlist?">
              <do_if value="not $actor.$ut_cac.$defaultorders?">
                <set_value name="$actor.$ut_cac.$defaultorders" exact="table[$script='ut.cac.orders.endlesswait']"/>
                <set_entity_type entity="this" type="entitytype.recruitment"/>
              </do_if>
              <start_script object="$actor" name="'ut.cac.orderlist.loop'"/>
              <do_if value="$actor.room != player.room">
                <signal_objects object="$actor" param="'new order'" param2="table[$script='ut.cac.com.personal.transfer',$displayname='Transfer to %1; mode: %2'.[$actor.station.name,'standby'],$destination=$actor.station,$job='standby',$interruptable=true]" delay="1s"/>
              </do_if>
              <debug_text filter="general" text="' %1 started loop'.[$actor.name]"/>
            </do_if>
            <do_else>
              <debug_text filter="error" text="' %1 orderlist detected - not starting loop'.[$actor.name]"/>
            </do_else>
          </actions>
        </cue>
      </cues>
    </cue>
    <!-- Root Dialogue Tree - supposed to be supporting both Employees and non-Employees in the long run
        Choices for Employees:
        1 - Orderlist Managment (Orders may be unavailable, but Orderlist can always be shown)
        2 - Settings Managment (may be unavailable)
        3 - Connect Menu
        4 - Subordinates Menu
        5 - Personal Menu
        
        Choices for non-Employees (Not Yet Used):
        1 - Ask for Support/Services
        2 - I want to hire you
        3 - Guidiance
        4 - Maybe include Smalltalk?
        5 - Personal Information
        -->
    <cue name="Comm_Common_Root" instantiate="true">
      <conditions>
        <check_any>
          <check_all>
            <event_conversation_started conversation="default"/>
            <check_value value="@event.object.$orderlist.{1}.$script == 'ut.cac.com.personal.transfer'" negate="true" comment="no conversations during Personal Transfer!"/>
          </check_all>
          <event_conversation_returned_to_section section="default"/>
        </check_any>
        <check_value value="event.object.$ut_cac?"/>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2 event.name= %3 \nevent.param= %4 event.param2= %5 event.param3= %6'.[event.object.name,event.object.container.name,event.name,event.param,event.param2,event.param3]"/>
        <do_if value="event.object.isplayerowned">
          <do_if value="event.name == 'event_conversation_started'">
            <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
              <do_if value="event.object.room == player.entity.room">
                <add_npc_line speaker="player.entity" line="[1100,1101].random" hidechoices="false" comment="Hello there. | Hi."/>
                <add_npc_line speaker="event.object" line="[1,5,1002,1004].random" hidechoices="false" comment="Hey, there!  | How can I help? | How can I help, Sir? | Hello, Sir. What can I do for you?"/>
              </do_if>
              <do_else>
                <add_npc_line speaker="player.entity" line="[1,1100,1101].random" hidechoices="false" comment="This is Otani, channel open. | Hello there. | Hi."/>
                <add_npc_line speaker="event.object" line="[1,2,5,1001,1003].random" hidechoices="false" comment="Hey, there! | Comms channel open. | How can I help? | Comms opened, Sir. | Coming in loud and clear. What's the matter?"/>
              </do_else>
            </do_if>
          </do_if>
          <add_player_choice_sub text="{5554103,1}" position="1" section="comm_orders_main"/>
          <add_player_choice_sub text="{5554103,2}" position="2" section="comm_settings_main" selectable="event.object.$ut_cac.$settings_section?"/>
          <add_player_choice_sub text="{5554103,3}" position="3" section="comm_connect_main"/>
          <add_player_choice_sub text="{5554103,4}" position="4" section="comm_subordinates_main"/>
          <add_player_choice_sub text="{5554103,5}" position="5" section="comm_personal_main"/>
        </do_if>
        <do_else>
          <do_if value="event.name == 'event_conversation_started'">
            <do_if value="event.object.room == player.entity.room">
              <add_npc_line speaker="player.entity" line="[1100,1101].random" hidechoices="false" comment="Hello there. | Hi."/>
              <add_npc_line speaker="event.object" line="[1,5,1002,1004].random" hidechoices="false" comment="Hey, there!  | How can I help? | How can I help, Sir? | Hello, Sir. What can I do for you?"/>
            </do_if>
            <do_else>
              <add_npc_line speaker="player.entity" line="[1,1100,1101].random" hidechoices="false" comment="This is Otani, channel open. | Hello there. | Hi."/>
              <add_npc_line speaker="event.object" line="[1,2,5,1001,1003].random" hidechoices="false" comment="Hey, there! | Comms channel open. | How can I help? | Comms opened, Sir. | Coming in loud and clear. What's the matter?"/>
            </do_else>
          </do_if>
          <add_player_choice_sub text="{5554103,1}" position="1" section="comm_services_main" selectable="false"/>
          <add_player_choice_sub text="{5554103,2}" position="2" section="comm_hire_main" selectable="false"/>
          <add_player_choice_sub text="{5554103,3}" position="3" section="comm_guidiance_main" selectable="false"/>
          <add_player_choice_sub text="{5554103,4}" position="4" section="comm_subordinates_main" selectable="false"/>
          <add_player_choice_sub text="{5554103,5}" position="5" section="comm_personal_main"/>
        </do_else>
        <add_player_choice_sub text="'DEBUG'" position="6" section="comm_debug_main"/>
        <set_conversation_return_section section="comm_goodbye"/>
        <!--add_player_choice_return text="{5554103,6}" position="close"/-->
      </actions>
    </cue>
    <!-- First Player Employee Specific Stuff -->
    <!-- Root Choice 1 - Orderlist Managment -->
    <cue name="Comm_Common_Orders" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_orders_"/>
          <event_conversation_returned_to_section sectionprefix="comm_orders_"/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2 event.name= %3 \nevent.param= %4 event.param2= %5 event.param3= %6'.[event.object.name,event.object.container.name,event.name,event.param,event.param2,event.param3]"/>
        <do_if value="not event.object.$orderlist?">
          <debug_text filter="error" text="'%1 No Orderlist!!! returning to prev Section!'.[event.object.name,event.param]"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_if>
        <do_elseif value="event.param == 'comm_orders_main'">
        <!-- Button Reminder: { 'button' , 'button text' [,'next_section' [ ,hotkey  [, selectable [,param [,keepvisible [,notsubsection]]]] ]] } -->
          <set_value name="$genericuiparam" exact=" [ 0 , 0 , 'Orders for %1 on %2'.[event.object.name,event.object.container.name], null, null , if $selectedcell? then $selectedcell else null , [  if event.object.$orderlist.count ge 10 then 50 else 30 , -1 , 30 , 150 ] ,  [] , [ 
[ 'button' , 'Back' , null , 'INPUT_STATE_DETAILMONITOR_B' , true ] , 
[ 'button' , 'Cancel all Queued Orders' , 'comm_orders_cancel_all' , 'INPUT_STATE_DETAILMONITOR_BACK' , true , false , true] , 
[ 'button' , 'Insert Order' , 'comm_orders_add' , 'INPUT_STATE_DETAILMONITOR_Y' , event.object.$ut_cac.$orders_section? , null , true ] , 
[ 'button' , 'Append Order', 'comm_orders_add' , 'INPUT_STATE_DETAILMONITOR_X' , event.object.$ut_cac.$orders_section? , 0 , false ] 
] ]"/>
          <do_if value="not event.object.$ut_cac.$orders_section? and event.object.$ut_cac.$defaultorders.$script == 'ut.cac.orders.endlesswait' and @event.object.$orderlist.{1}.$order == 'wait order'" comment="Employee is waiting for another Assignment - replace Order Button with Assignment one">
            <set_value name="$genericuiparam.{9}.{3}" exact="[ 'button' , 'Work here as...' , 'comm_personal_transfer_objectselected' , 'INPUT_STATE_DETAILMONITOR_X' , true , [0,0,player.entity.container] , false ]"/>
            <set_value name="$genericuiparam.{9}.{4}" exact="[ 'button' , 'New Assignment' , 'comm_personal_transfer' , 'INPUT_STATE_DETAILMONITOR_X' , true , null , true ]"/>
          </do_if>
          <!--<append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 3 , 1 , 1 , 1 , 1 ] ] , [ 'text' , '' ] , [ 'text' , 'Available Points for Ranges: ' + $totalrangepoints + '   Remaining Points: ' + $rangepoints ] , [ 'text' , 'Navigation Skill:' ] , [ 'stars' , event.object.skill.navigation], [ 'statusbar' , 100 * $rangepoints / $totalrangepoints , 100 , 255 , 100 ,  100 ] ]"/>-->
          <do_all exact="event.object.$orderlist.count" counter="$i" reverse="false">
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 1 , 1 , 1 , 1] , null , $i] , 
[ 'text' , $i + '.' ] , 
[ 'text' , event.object.$orderlist.{$i}.$displayname ] , 
[ 'button' , 'V' , 'comm_orders_mod' , null , ( if event.object.$orderlist.{$i}.$moveable? then event.object.$orderlist.{$i}.$moveable else true ) and ( if $i == 1 and event.object.$orderlist.{$i}.$interruptable? then event.object.$orderlist.{$i}.$interruptable else true ) , [ 'move down' , $i , event.object.$orderlist.{$i}.$script ] , true ] , 
[ 'button' , 'Cancel' , 'comm_orders_mod' , null , if event.object.$orderlist.{$i}.$interruptable? then event.object.$orderlist.{$i}.$interruptable else true , [ 'cancel' , $i , event.object.$orderlist.{$i}.$script ] , true] 
]"/>
          </do_all>
          <!-- remove last move down Entry, or add a Placeholder Entry to prevent the menü from bugging out -->
          <do_if value="$genericuiparam.{8}.count">
            <set_value name="$genericuiparam.{8}.{$genericuiparam.{8}.count}.{4}" exact="null"/>
          </do_if>
          <do_else>
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 4] , null , null] , [ 'text' , ' ««« ORDERLIST EMPTY »» :wtf:' ] ]"/>
          </do_else>
          <remove_value name="$selectedcell"/>
          <open_conversation_menu menu="ut_genericui" param="$genericuiparam"/>
          <add_conversation_view view="closeupdetailmonitor"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_orders_mod'">
          <!-- get Index of Order to Modify (also account for slight changes in position) -->
          <do_if value="event.object.$orderlist.{event.param2.{2}}.$script == event.param2.{3}">
            <set_value name="$order_id" exact="event.param2.{2}"/>
          </do_if>
          <do_elseif value="event.object.$orderlist.{event.param2.{2} - 1}.$script == event.param2.{3}">
            <set_value name="$order_id" exact="event.param2.{2} - 1"/>
          </do_elseif>
          <do_elseif value="event.object.$orderlist.{event.param2.{2} + 1}.$script == event.param2.{3}">
            <set_value name="$order_id" exact="event.param2.{2} + 1"/>
          </do_elseif>
          <do_elseif value="event.object.$orderlist.{event.param2.{2} - 2}.$script == event.param2.{3}">
            <set_value name="$order_id" exact="event.param2.{2} - 2"/>
          </do_elseif>
          <do_elseif value="event.object.$orderlist.{event.param2.{2} + 2}.$script == event.param2.{3}">
            <set_value name="$order_id" exact="event.param2.{2} + 2"/>
          </do_elseif>
          <do_elseif value="event.object.$orderlist.{event.param2.{2} - 3}.$script == event.param2.{3}">
            <set_value name="$order_id" exact="event.param2.{2} - 3"/>
          </do_elseif>
          <do_else>
            <!-- If order cannot be Located - do nothing! -->
          </do_else>
          <do_if value="$order_id? and $order_id">
            <do_if value="event.param2.{1} == 'cancel'">
              <signal_objects object="event.object" param="'cancel order'" param2="$order_id"/>
            </do_if>
            <do_elseif value="event.param2.{1} == 'move down' and event.object.$orderlist.count gt $order_id">
              <do_if value="$order_id gt 1">
                <!-- if it doesnt affect the currently active Order just modify the Orderlist directly -->
                <set_value name="event.object.$orderlist.{$order_id}" exact="event.object.$orderlist.{$order_id + 1}"/>
                <set_value name="event.object.$orderlist.{$order_id + 1}" exact="event.param2.{3}"/>
              </do_if>
              <do_else>
                <!-- when Active Order is involved let the orderlist loop handle it -->
                <signal_objects object="event.object" param="'interrupt order'" param2="event.object.$orderlist.{2}"/>
                <remove_value name="event.object.$orderlist.{2}"/>
              </do_else>
            </do_elseif>
            <do_elseif value="event.param2.{1} == 'move up' and event.object.$orderlist.count - 1 gt $order_id and $order_id gt 1">
              <do_if value="$order_id gt 2">
                <!-- if it doesnt affect the currently active Order just modify the Orderlist directly -->
                <set_value name="event.object.$orderlist.{$order_id}" exact="event.object.$orderlist.{$order_id - 1}"/>
                <set_value name="event.object.$orderlist.{$order_id - 1}" exact="event.param2.{3}"/>
              </do_if>
              <do_else>
                <!-- when Active Order is involved let the orderlist loop handle it -->
                <signal_objects object="event.object" param="'interrupt order'" param2="event.object.$orderlist.{2}"/>
                <remove_value name="event.object.$orderlist.{2}"/>
              </do_else>
            </do_elseif>
          </do_if>
          <do_else>
            <debug_text filter="error" text="'%1 Specified Order not in Orderlist anymore - doing nothing'.[event.object.name]"/>
          </do_else>
          <remove_value name="$order_id"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_orders_cancel_all'">
          <do_all exact="event.object.$orderlist.count" counter="$i" reverse="true">
            <do_if value="( if event.object.$orderlist.{$i}.$interruptable? then event.object.$orderlist.{$i}.$interruptable else true ) and not ( $i == 1 )">
              <remove_value name="event.object.$orderlist.{$i}"/>
            </do_if>
          </do_all>
          <do_if value="event.param2" comment="event.param2 == true says that we shall also cancel the first order (see comm_orders_modify)">
            <signal_objects object="event.object" param="'cancel order'" param2="1"/>
          </do_if>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_orders_add'">
          <do_if value="event.name == 'event_conversation_next_section'">
            <do_if value="event.object.$ut_cac.$orders_section?">
              <!-- Prepare Order Selection (Order Selection itself is in the next Section; order will be applied upon Return) -->
              <do_if value="event.param2 == null or event.param2 ge event.object.$orderlist.count">
                <set_value name="$insert_pos" exact="null"/>
              </do_if>
              <do_else>
                <set_value name="$insert_pos" exact="[ event.object.$orderlist.{event.param2}, event.param2 ]"/>
              </do_else>
              <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'next_subsection', event.object.$ut_cac.$orders_section]"/>
            </do_if>
            <do_else>
              <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
            </do_else>
          </do_if>
          <do_elseif value="event.name == 'event_conversation_returned_to_section'">
            <!-- Returned from Order Selection - check if there is a new Order to be inserted, if yes signal order managment and return -->
            <!-- If both $insert_pos and $new_order have a Value we can safely assume the Player has selected where he wants to add a New Order and what this Order is - so just insert it at the specified Spot -->
            <do_if value="$insert_pos? and $new_order?">
              <!-- Player selected no Previous Order so he wants to attach it at the End of the List -->
              <do_if value="$insert_pos == null">
                <signal_objects object="event.object" param="'new order'" param2="$new_order"/>
              </do_if>
              <do_else>
              <!-- Player selected a Specific Order to replace or insert - if it hasnt Moved just get its index, otherwise use the first fit in the List -->
                <do_if value="event.object.$orderlist.{$insert_pos.{2}} == $insert_pos.{1}">
                  <set_value name="$index" exact="$insert_pos.{2}"/>
                </do_if>
                <!-- Order to replace moved down - a common occurence probably -->
                <do_elseif value="event.object.$orderlist.indexof.{$insert_pos.{1}} lt $insert_pos.{2}">
                  <set_value name="$index" exact="event.object.$orderlist.indexof.{$insert_pos.{1}}"/>
                </do_elseif>
                <!-- Order moved Up - Unusual, leave a Note in the Log -->
                <do_elseif value="event.object.$orderlist.indexof.{$insert_pos.{1}}">
                  <set_value name="$index" exact="event.object.$orderlist.indexof.{$insert_pos.{1}}"/>
                </do_elseif>
                <!-- Order not in Orderlist anymore - Dont change anything -->
                <do_else>
                  <set_value name="$index" exact="null"/>
                </do_else>
                <do_if value="$index">
                  <signal_objects object="event.object" param="'new order'" param2="$new_order" param3="$index"/>
                </do_if>
              </do_else>
              <!-- cleanup and return-->
              <remove_value name="$insert_pos"/>
              <remove_value name="$new_order"/>
            </do_if>
            <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
          </do_elseif>
        </do_elseif>
      </actions>
    </cue>
    <!-- Root Choice 2 - Settings Managment -->
    <cue name="Comm_Common_Settings" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_settings_"/>
          <event_conversation_returned_to_section sectionprefix="comm_settings_"/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2:\nevent.param= %3 event.param2= %4 event.param3= %5'.[event.object.name,event.name,event.param,event.param2,event.param3]"/>
        <do_if value="event.name == 'event_conversation_next_section' and event.object.$ut_cac.$settings_section?">
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'next_subsection', event.object.$ut_cac.$settings_section]"/>
        </do_if>
        <do_else>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_else>
      </actions>
    </cue>
    <!-- Root Choice 3 - Connect with.. -->
    <cue name="Comm_Common_Connect" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_connect_"/>
          <event_conversation_returned_to_section sectionprefix="comm_connect_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2 event.name= %3 \nevent.param= %4 event.param2= %5 event.param3= %6'.[event.object.name,event.object.container.name,event.name,event.param,event.param2,event.param3]"/>
        <!--- ################################### -->
        <!--                        Connect Menu                          -->
        <!--- ################################### -->
        <do_if value="event.param == 'comm_connect_main'">
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <add_npc_line speaker="player.entity" line="[102081].random" hidechoices="false" comment="Just put him through."/>
            <add_npc_line speaker="event.object" line="[1012,1013,1018,1019].random" hidechoices="false" comment="generic confirmation"/>
          </do_if>
          <!-- Slot1: Defense Officer -->
          <do_if value="event.object.container.defencenpc.exists">
            <add_player_choice_subconv text="{5554103,31}.[event.object.container.defencenpc.name]" position="1" conversation="default" actor="event.object.container.defencenpc" selectable="event.object.container.defencenpc != event.object"/>
          </do_if>
          <do_elseif value="@event.object.container.buildingmodule.container.defencenpc.exists">
            <add_player_choice_subconv text="{5554103,31}.[event.object.container.buildingmodule.container.defencenpc.name]" position="1" conversation="default" actor="event.object.container.buildingmodule.container.defencenpc" selectable="event.object.container.buildingmodule.container.defencenpc != event.object"/>
          </do_elseif>
          <do_elseif value="@event.object.container.buildmodule.buildanchor.defencenpc.exists">
            <add_player_choice_subconv text="{5554103,31}.[event.object.container.buildmodule.buildanchor.defencenpc.name]" position="1" conversation="default" actor="event.object.container.buildmodule.buildanchor.defencenpc" selectable="event.object.container.buildmodule.buildanchor.defencenpc != event.object"/>
          </do_elseif>
          <!-- Slot2: Engineer -->
          <do_if value="event.object.container.engineer.exists">
            <add_player_choice_subconv text="{5554103,32}.[event.object.container.engineer.name]" position="2" conversation="default" actor="event.object.container.engineer" selectable="event.object.container.engineer != event.object"/>
          </do_if>
          <do_elseif value="@event.object.container.buildingmodule.container.engineer.exists">
            <add_player_choice_subconv text="{5554103,32}.[event.object.container.buildingmodule.container.engineer.name]" position="2" conversation="default" actor="event.object.container.buildingmodule.container.engineer" selectable="event.object.container.buildingmodule.container.engineer != event.object"/>
          </do_elseif>
          <do_elseif value="@event.object.container.buildmodule.buildanchor.engineer.exists">
            <add_player_choice_subconv text="{5554103,32}.[event.object.container.buildmodule.buildanchor.engineer.name]" position="2" conversation="default" actor="event.object.container.buildmodule.buildanchor.engineer" selectable="event.object.container.buildmodule.buildanchor.engineer != event.object"/>
          </do_elseif>
          <!-- Slot3: Architect -->
          <do_if value="event.object.container.architect.exists">
            <add_player_choice_subconv text="{5554103,33}.[event.object.container.architect.name]" position="3" conversation="default" actor="event.object.container.architect" selectable="event.object.container.architect != event.object"/>
          </do_if>
          <do_elseif value="@event.object.container.buildingmodule.container.architect.exists">
            <add_player_choice_subconv text="{5554103,33}.[event.object.container.buildingmodule.container.architect.name]" position="3" conversation="default" actor="event.object.container.buildingmodule.container.architect" selectable="event.object.container.buildingmodule.container.architect != event.object"/>
          </do_elseif>
          <do_elseif value="@event.object.container.buildmodule.buildanchor.architect.exists">
            <add_player_choice_subconv text="{5554103,33}.[event.object.container.buildmodule.buildanchor.architect.name]" position="3" conversation="default" actor="event.object.container.buildmodule.buildanchor.architect" selectable="event.object.container.buildmodule.buildanchor.architect != event.object"/>
          </do_elseif>
          <!-- Slot4: Superior -->
          <do_if value="event.object.container.commanderentity.exists">
            <add_player_choice_subconv text="{5554103,34}.[event.object.container.commanderentity.name]" position="4" conversation="default" actor="event.object.container.commanderentity" selectable="event.object.container.commanderentity != event.object and event.object.container.commanderentity != player.entity"/>
          </do_if>
          <do_elseif value="@event.object.container.buildingmodule.container.architect.exists">
            <add_player_choice_subconv text="{5554103,34}.[event.object.container.buildingmodule.container.commanderentity.name]" position="4" conversation="default" actor="event.object.container.buildingmodule.container.commanderentity" selectable="event.object.container.buildingmodule.container.commanderentity != event.object"/>
          </do_elseif>
          <do_elseif value="@event.object.container.buildmodule.buildanchor.architect.exists">
            <add_player_choice_subconv text="{5554103,34}.[event.object.container.buildmodule.buildanchor.commanderentity.name]" position="4" conversation="default" actor="event.object.container.buildmodule.buildanchor.commanderentity" selectable="event.object.container.buildmodule.buildanchor.commanderentity != event.object"/>
          </do_elseif>
          <do_if value="event.object.container.pilot.exists">
            <add_player_choice_subconv text="{5554103,35}.[event.object.container.pilot.name]" position="5" conversation="default" actor="event.object.container.pilot" selectable="event.object.container.pilot != event.object"/>
          </do_if>
          <!-- Slot5: Pilot/Captain/Manager -->
          <do_elseif value="event.object.container.tradenpc.exists">
            <add_player_choice_subconv text="{5554103,36}.[event.object.container.tradenpc.name]" position="5" conversation="default" actor="event.object.container.tradenpc" selectable="event.object.container.tradenpc != event.object"/>
          </do_elseif>
          <do_elseif value="event.object.container.buildingmodule.container.pilot.exists">
            <add_player_choice_subconv text="{5554103,35}.[event.object.container.buildingmodule.container.pilot.name]" position="5" conversation="default" actor="event.object.container.buildingmodule.container.pilot" selectable="event.object.container.buildingmodule.container.pilot != event.object"/>
          </do_elseif>
          <do_elseif value="event.object.container.buildingmodule.container.tradenpc.exists">
            <add_player_choice_subconv text="{5554103,36}.[event.object.container.buildingmodule.container.tradenpc.name]" position="5" conversation="default" actor="event.object.container.buildingmodule.container.tradenpc" selectable="event.object.container.buildingmodule.container.tradenpc != event.object"/>
          </do_elseif>
          <do_elseif value="event.object.container.buildmodule.buildanchor.pilot.exists">
            <add_player_choice_subconv text="{5554103,35}.[event.object.container.buildmodule.buildanchor.pilot.name]" position="5" conversation="default" actor="event.object.container.buildmodule.buildanchor.pilot" selectable="event.object.container.buildmodule.buildanchor.pilot != event.object"/>
          </do_elseif>
          <do_elseif value="event.object.container.buildmodule.buildanchor.tradenpc.exists">
            <add_player_choice_subconv text="{5554103,36}.[event.object.container.buildmodule.buildanchor.tradenpc.name]" position="5" conversation="default" actor="event.object.container.buildmodule.buildanchor.tradenpc" selectable="event.object.container.buildmodule.buildanchor.tradenpc != event.object"/>
          </do_elseif>
          <!-- Slot6: Subordinates -->
          <add_player_choice_sub text="{5554103,37}.[event.object.container.subordinates.{event.object.type}.count]" position="6" section="comm_connect_subordinates" selectable="event.object.container.subordinates.{event.object.type}.count" confidence="[event.object.container.subordinates.{event.object.type}.count - 1,5].min"/>
          <add_player_choice_return text="{5554103,7}" position="close"/>
        </do_if>
        <do_elseif value="event.param == 'comm_connect_subordinates'">
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <add_npc_line speaker="event.object" line="[1012,1013,1018,1019].random" hidechoices="false" comment="generic confirmation"/>
          </do_if>
          <do_all exact="[event.object.container.subordinates.{event.object.type}.count,6].min" counter="$i">
            <do_if value="event.object.container.subordinates.{event.object.type}.{$i}.isclass.station">
              <do_if value="event.object.container.subordinates.{event.object.type}.{$i}.tradenpc.exists">
                <add_player_choice_subconv text="{5554103,35}.[event.object.container.subordinates.{event.object.type}.{$i}.tradenpc.name]" position="$i" conversation="default" actor="event.object.container.subordinates.{event.object.type}.{$i}.tradenpc"/>
              </do_if>
            </do_if>
            <do_elseif value="event.object.container.subordinates.{event.object.type}.{$i}.isclass.ship">
              <do_if value="event.object.container.subordinates.{event.object.type}.{$i}.pilot.exists">
                <add_player_choice_subconv text="{5554103,36}.[event.object.container.subordinates.{event.object.type}.{$i}.pilot.name]" position="$i" conversation="default" actor="event.object.container.subordinates.{event.object.type}.{$i}.pilot"/>
              </do_if>
            </do_elseif>
          </do_all>
          <add_player_choice_return text="{5554103,7}" position="6" returnparam="'no change'"/>
          <add_player_choice_return text="{5554103,7}" position="close" returnparam="'no change'"/>
        </do_elseif>
        <!-- ToDo: Use this Snippet once again to make a new Conversation which doesnt return to the old one on cmpletion -->
        <do_elseif value="event.param == 'comm_connect_selected'">
          <!-- CHOICE SNIPPET (Example)-->
          <add_player_choice text="{5554103,35}.[event.object.container.subordinates.{event.object.type}.{$i}.pilot.name]" position="$i" section="comm_connect_selected" choiceparam="event.object.container.subordinates.{event.object.type}.{$i}.pilot" selectable="event.object.container.subordinates.{event.object.type}.{$i}.pilot != event.object"/>
          <!-- /CHOICE SNIPPET -->
          <!-- Cancel this Conversation and start a new one with the desired Person -->
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <do_if value="event.object.room != player.entity.room">
              <add_npc_line speaker="event.object" line="[11,12,1005].random" hidechoices="false"/>
            </do_if>
            <do_else>
              <add_npc_line speaker="event.object" line="[11,12,1006].random" hidechoices="false"/>
            </do_else>
          </do_if>
          <cancel_conversation actor="event.object"/>
          <start_conversation actor="event.param2" conversation="default"/>
        </do_elseif>
      </actions>
    </cue>
    <!-- Root Choice 4 - Subordinates -->
    <cue name="Comm_Common_Subordinates" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_subordinates_"/>
          <event_conversation_returned_to_section sectionprefix="comm_subordinates_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2:\nevent.param= %3 event.param2= %4 event.param3= %5'.[event.object.name,event.name,event.param,event.param2,event.param3]"/>
        <!--- ################################### -->
        <!-- Subordinate Managment (also assign to superior) -->
        <!--- ################################### -->
        <do_if value="event.param == 'comm_subordinates_main'">
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <add_npc_line speaker="player.entity" line="[1400,1401,1402].random" hidechoices="false" comment="lets talk about this in detail" />
            <add_npc_line speaker="event.object" line="[4110,4111].random" hidechoices="false" comment="Here you go." />
          </do_if>
          <add_player_choice text="{5554103,41}" position="1" section="comm_subordinates_take_playersquad" selectable="player.primaryship.subordinates.{1}? and event.object.isclass.station"/>
          <add_player_choice text="{5554103,42}" position="2" section="comm_subordinates_add_subordinate" selectable="false"/>
          <add_player_choice_sub text="{5554103,43}" position="3" section="comm_subordinates_take_shipsquad" selectable="false" comment="not implemented yet"/>
          <add_player_choice text="{5554103,44}" position="4" section="comm_subordinates_transfer_to_playersquad" selectable="false" comment="no practical usage for this yet"/>
          <add_player_choice text="{5554103,45}" position="5" section="comm_subordinates_superior_select" selectable="event.object.container.isclass.ship"/>
          <add_player_choice_return text="{5554103,7}" position="6" />
          <add_player_choice_return text="{5554103,7}" position="close" />
        </do_if>
        <do_elseif value="event.param == 'comm_subordinates_take_playersquad'">
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <add_npc_line speaker="event.object" line="[1055].random" hidechoices="false" comment="Perfect. I'll make sure she's put to work." />
          </do_if>
          <do_all exact="player.primaryship.subordinates.count" counter="$i" reverse="true">
            <do_if value="player.primaryship.subordinates.{$i}.pilot.$orderlist?">
              <set_value name="player.primaryship.subordinates.{$i}.pilot.$debug" exact="@event.object.$debug"/>
              <signal_objects object="player.primaryship.subordinates.{$i}.pilot" param="'new order'" param2="table[$script='ut.cac.com.personal.transfer',$displayname='Superior change to: %1 // %2'.[event.object.station.name,event.object.name], $new_superior=event.object.station,$new_superiortype=event.object.type,$job='captain',$interruptable=true]"/>
            </do_if>
          </do_all>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_subordinates_transfer_to_playersquad'">
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <add_npc_line speaker="event.object" line="[1057].random" hidechoices="false" comment="Preparing to abort current operations." />
          </do_if>
          <do_all exact="event.object.subordinates.count" counter="$i" reverse="true">
            <add_to_player_squad object="event.object.subordinates.{$i}" />
          </do_all>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_subordinates_superior_select'">
          <do_if value="event.name == 'event_conversation_next_section'">
            <open_conversation_menu menu="UTMapMenu" param="[0, 0, 'sector', event.object.container.sector, null, event.object.container.zone, 'selectobject', ['comm_subordinates_superior_selected']]"/>
          </do_if>
          <do_else>
            <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
          </do_else>
        </do_elseif>
        <do_elseif value="event.param == 'comm_subordinates_superior_selected'">
          <signal_objects object="event.object" param="'new order'" param2="table[$script='ut.cac.com.personal.transfer',$displayname='Superior change to: %1 // %2'.[event.param2.{3}.name,event.param2.{3}.tradenpc.name], $new_superior=event.param2.{3},$new_superiortype=if event.param2.{3}.isclass.station or event.param2.{3}.buildmodule.exists then entitytype.manager else entitytype.commander,$interruptable=true]"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
      </actions>
    </cue>
    <!-- Second Non-Employee-Specific Stuff -->
    <!-- Root Choice 1 - Perform Paid Order (or other Services) - a very Simplified Orders Menu -->
    <cue name="Comm_Common_Services" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_services_"/>
          <event_conversation_returned_to_section sectionprefix="comm_services_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2:\nevent.param= %3 event.param2= %4 event.param3= %5'.[event.object.name,event.name,event.param,event.param2,event.param3]"/>
        <!-- Planned types of Services:
        => Trade Agent (NOT Persistent, will consume Money continiously)
        => Map Updates (one time update; all things currently known to Faction)
        => Buy known Trade Offers (one time update; random Stations in Zone/Sector/Cluster, depending on Skill)
        => Escort for a certain Time (Captain only)
        => Taxi Servide (Captain only; will send Ship to a certain Location and stay there for 10 minutes, but exits when the Player undocks, retreat on Attack depends on Payment/Skill)
        => Repairs (Engineer only)
        => "Special" Discounts (Managers only; Discounts will last several Days, but only apply one time)
        => Ignore certain Targets (DOs only; broadcast to all Ships of Faction)
        => Buy Weapons (DOs only; converts stock to player Inventory; expensive in Comparision)
        -->
          <!-- Common Services -->
      </actions>
    </cue>
    <!-- Root Choice 2 -  Hire Menu -->
    <cue name="Comm_Common_Hire" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_hire_"/>
          <event_conversation_returned_to_section sectionprefix="comm_hire_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2:\nevent.param= %3 event.param2= %4 event.param3= %5'.[event.object.name,event.name,event.param,event.param2,event.param3]"/>
        
        
      </actions>
    </cue>
    <!-- Root Choice 3 -  Guidiance Menu -->
    <cue name="Comm_Common_Guidiance" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_guidiance_"/>
          <event_conversation_returned_to_section sectionprefix="comm_guidiance_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2:\nevent.param= %3 event.param2= %4 event.param3= %5'.[event.object.name,event.name,event.param,event.param2,event.param3]"/>
        
        
      </actions>
    </cue>
    <!-- Root Choice 4 -  Smalltalk -->
    <cue name="Comm_Common_Smalltalk" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_smalltalk_"/>
          <event_conversation_returned_to_section sectionprefix="comm_smalltalk_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2:\nevent.param= %3 event.param2= %4 event.param3= %5'.[event.object.name,event.name,event.param,event.param2,event.param3]"/>
        
        
      </actions>
    </cue>
    <!-- Shared Stuff -->
    <!-- Root Choice 5 - Personal Stuff (Skills, Account, Workplace ) - Also used for Non-Employees! -->
    <cue name="Comm_Common_Personal" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_personal_"/>
          <event_conversation_returned_to_section sectionprefix="comm_personal_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2 event.name= %3 \nevent.param= %4 event.param2= %5 event.param3= %6'.[event.object.name,event.object.container.name,event.name,event.param,event.param2,event.param3]"/>
        <!--- ################################### -->
        <!--                       Personal Menu                          -->
        <!--- ################################### -->
        <do_if value="event.param == 'comm_personal_main'">
          <set_value name="$genericuiparam" exact=" [ 0 , 0 , 'Personal Information for %1'.[event.object.name], null, null , null , [ 175 , 110 , 175 , 110 , 175 , 110 , 175 , -1 ] ,  [] ,  [ 
[ 'button' , 'Back' , null , 'INPUT_STATE_DETAILMONITOR_B' , true ] , 
[ 'button' , 'unused' , 'comm_personal_' , 'INPUT_STATE_DETAILMONITOR_BACK' , false , null , true] , 
[ 'button' , 'unused' , 'comm_personal_' , 'INPUT_STATE_DETAILMONITOR_Y' , false , null , true ] , 
[ 'button' , 'unused' , 'comm_personal_' , 'INPUT_STATE_DETAILMONITOR_X' , false , null , true ] 
] ]"/>
          <!-- Skill Part of the Menu  -->
          <append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 3 , 3 , 2 ] ] , [ 'text' , 'Skills' ] , [ 'text' , 'Combinedskill for current Profession: ' ] , [ 'statusbar' , event.object.combinedskill , 0  , 255 , 0 ,  100 ] ]"/>
          <set_value name="$skillist" exact="[ skilltype.boarding , skilltype.combat , skilltype.engineering , skilltype.leadership , skilltype.management , skilltype.morale , skilltype.navigation , skilltype.science ]"/>
          <!-- Create Lines for Primary Skills -->
          <set_value name="$combinedcells1" exact="[1,1,1,1,1,1,1,1]"/>
          <set_value name="$combinedcells2" exact="[2,2,2,2]"/>
          <set_value name="$primaryskills" exact="event.object.type.skilltypes"/>
          <do_while value="$primaryskills.count">
            <set_value name="$line1" exact="[ [ 'regular' , $combinedcells1 ] ]"/>
            <set_value name="$line2" exact="[ [ 'regular' , $combinedcells2 ] ]"/>
            <do_while value="$line2.count lt 5" comment="to fill only one Line with Skills, even in case there are more than 3">
              <!-- no funcion to convert a decimal value to a hexadecimal one - using a if-elseif instead to calculate relevancy color -->
              <do_if value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 80">
                <set_value name="$colorcode" exact="'\033#FF00FF00#'"/>
              </do_if>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 70">
                <set_value name="$colorcode" exact="'\033#FF00FF40#'"/>
              </do_elseif>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 60">
                <set_value name="$colorcode" exact="'\033#FF00FF80#'"/>
              </do_elseif>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 55">
                <set_value name="$colorcode" exact="'\033#FF00FFBF#'"/>
              </do_elseif>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 50">
                <set_value name="$colorcode" exact="'\033#FF00FFFF#'"/>
              </do_elseif>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 45">
                <set_value name="$colorcode" exact="'\033#FF00BFFF#'"/>
              </do_elseif>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 40">
                <set_value name="$colorcode" exact="'\033#FF0080FF#'"/>
              </do_elseif>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 30">
                <set_value name="$colorcode" exact="'\033#FF0040FF#'"/>
              </do_elseif>
              <do_elseif value="event.object.type.skillrelevance.{$primaryskills.{1}} gt 20">
                <set_value name="$colorcode" exact="'\033#FF0000FF#'"/>
              </do_elseif>
              <do_else>
                <set_value name="$colorcode" exact="'\033#FF0000BF#'"/>
              </do_else>
              <append_to_list name="$line1" exact="[ 'text' , $colorcode + $primaryskills.{1}.name ]"/>
              <append_to_list name="$line1" exact="[ 'stars' , event.object.skill.{$primaryskills.{1}}]"/>
              <!-- ToDo: Change this into Skill Progress for ALL Skills -->
              <append_to_list name="$line2" exact="[ 'statusbar' , 66 , 100 , 255 , 100 ,  100 ]"/>
              <remove_value name="$skillist.{$skillist.indexof.{$primaryskills.{1}}}"/>
              <remove_value name="$primaryskills.{1}"/>
              <do_if value="not $primaryskills.count">
                <break/>
              </do_if>
            </do_while>
            <!-- fill unused  Cells in first line with other Skills -->
            <do_while value="$line2.count lt 5" comment="check if there is still space in the Line">
              <append_to_list name="$line1" exact="[ 'text' , $skillist.{1}.name ]"/>
              <append_to_list name="$line1" exact="[ 'stars' , event.object.skill.{$skillist.{1}}]"/>
              <!-- ToDo: Change this into Skill Progress for ALL Skills -->
              <append_to_list name="$line2" exact="[ 'statusbar' , 66 , 100 , 255 , 100 ,  100 ]"/>
              <remove_value name="$skillist.{1}"/>
              <do_if value="not $skillist.count">
                <break/>
              </do_if>
            </do_while>
            <append_to_list name="$genericuiparam.{8}" exact="$line1"/>
            <append_to_list name="$genericuiparam.{8}" exact="$line2"/>
          </do_while>
          <!-- Create Lines for Other Skills -->
          <do_while value="$skillist.count">
            <set_value name="$line1" exact="[ [ 'regular' , $combinedcells1 ] ]"/>
            <set_value name="$line2" exact="[ [ 'regular' , $combinedcells2 ] ]"/>
            <do_while value="$line2.count lt 5" comment="check if there is still space in the Line">
              <append_to_list name="$line1" exact="[ 'text' , $skillist.{1}.name ]"/>
              <append_to_list name="$line1" exact="[ 'stars' , event.object.skill.{$skillist.{1}}]"/>
              <!-- ToDo: Change this into Skill Progress for ALL Skills -->
              <append_to_list name="$line2" exact="[ 'statusbar' , 66 , 100 , 255 , 100 ,  100 ]"/>
              <remove_value name="$skillist.{1}"/>
              <do_if value="not $skillist.count">
                <break/>
              </do_if>
            </do_while>
            <append_to_list name="$genericuiparam.{8}" exact="$line1"/>
            <append_to_list name="$genericuiparam.{8}" exact="$line2"/>
          </do_while>
          <remove_value name="$combinedcells1"/>
          <remove_value name="$combinedcells2"/>
          <remove_value name="$line1"/>
          <remove_value name="$line2"/>
          <append_to_list name="$genericuiparam.{8}" exact="[ [ 'invisible' , [ 8 ] ] , null ]"/>
          <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 6 ] ] , 
[ 'text' , 'Special Abilities' ] , [ 'text' , '\033#FF000000#Not implemented yet, just reserving the Space here' ] 
]"/>
          <!-- End Skill Part of the Menu -->
          
          <!-- Remaining Parts are only relevant for Player Employees -->
          <do_if value="event.object.isplayerowned">
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'invisible' , [ 8 ] ] , null ]"/>
            <!-- Account Part of the Menu -->
            <do_if value="event.object.money and event.object.money != player.money">
              <set_value name="$accountpercentage" exact="[ 80 * event.object.money / (event.object.container.productionmoney + event.object.container.wantedmoney + event.object.container.buildanchor.wantedmoney), 100].min " comment="100-%-Point is at 80% filling of the Bar. less than 50% are indcated by a red bar, less than 100% by yellow, and above that green"/>
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 6 , 2 ] ] , [ 'text' , 'Account' + ( if event.object.hasownaccount then ' (Main)' else ' (Shared)' ) ] , [ 'statusbar' , $accountpercentage , if ( $accountpercentage lt 80 ) then 255 else 0 ,  if ( $accountpercentage gt 40 ) then 255 else 0 , 0 , 100 ] ]"/>
              <remove_value name="$accountpercantage"/>
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 2 , 2 , 2 ] ] , 
[ 'button' , 'Min: ' + event.object.minbudget.formatted.default , 'comm_personal_money_minbudget' , null , true , null , true] , 
[ 'button' , 'Current: ' + event.object.money.formatted.default , 'comm_personal_money_transfer' , null , true , null , true] , 
[ 'button' , 'Max ' + event.object.maxbudget.formatted.default , 'comm_personal_money_maxbudget' , null , true , null , true ] , 
[ 'text' , '' ] 
]"/>
              <set_value name="$wantedmoney" exact="event.object.container.productionmoney + event.object.container.wantedmoney + @event.object.container.buildanchor.wantedmoney"/>
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 2 , 2 , 2 ] ] , 
[ 'text' , 'Required Money:'] , 
[ 'text' , $wantedmoney.formatted.default] , 
[ 'button' , 'Give Amount' , 'comm_personal_money_transfer' , null , ( event.object.money lt $wantedmoney ) and (($wantedmoney - event.object.money) le player.money ) , $wantedmoney - event.object.money , true ] , 
[ 'text' , '' ] 
]"/>
            </do_if>
            <do_else>
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 4 , 2 ] ] , [ 'text' , 'No own Account'] , [ 'statusbar' , 100 , 50 , 50 , 50 ,  100 ] ]"/>
            </do_else>
            <!-- End Money Part of the Menu -->
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'invisible' , [ 8 ] ] , null ]"/>
            <!-- Begin of Personal Transfer Part -->
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 8 ] ] , [ 'text' , 'Workplace Managment' ] ]"/>
<!-- Button Reminder: { 'button' , 'button text' [,'next_section' [ ,hotkey  [, selectable [,param [,keepvisible [,notsubsection]]]] ]] } -->
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 2 , 2 , 2 ] ] , 
[ 'button' , if ( event.object.$defaultorders? and not @event.object.$defaultorders.$inactive ) then 'Stop Working' else 'Start Working' , 'comm_personal_work_toggle' , null , event.object.$defaultorders? , 0  , true ] , 
[ 'button' , 'Work on.. as..' , 'comm_personal_transfer' , null , true , null , true ] , 
[ 'text' , '' ] 
]"/>
            <!--TO DO: Standby Check here-->
            <!-- End of Transfer Part -->
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'invisible' , [ 8 ] ] , null ]"/>
            <!-- begin of Pester Level Settings -->
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 4 , 4 ] ] , [ 'text' , ' Pester Level: ' + event.object.$ut_cac.$loglevel ] , [ 'text' , 'Log Level: ' + event.object.$ut_cac.$loglevel ] ]"/>
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 2 , 2 , 2 ] ] , 
[ 'button' , 'Set Pester to 0' , 'comm_personal_pester_set' , null , true , 0  , true ] , 
[ 'button' , 'Set Pester to 20' , 'comm_personal_pester_set' , null , true , 20  , true ] , 
[ 'button' , 'Set Log to 0' , 'comm_personal_log_set' , null , true , 0  , true ] , 
[ 'button' , 'Set Log to 20' , 'comm_personal_log_set' , null , true , 20  , true ] ]"/>
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 2 , 2 , 2 ] ] , 
[ 'button' , 'Set Pester to 40' , 'comm_personal_pester_set' , null , true , 40  , true ] , 
[ 'button' , 'Set Pester to 60' , 'comm_personal_pester_set' , null , true , 60  , true ] , 
[ 'button' , 'Set Log to 40' , 'comm_personal_log_set' , null , true , 40  , true ] , 
[ 'button' , 'Set Log to 60' , 'comm_personal_log_set' , null , true , 60  , true ] 
]"/>
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 2 , 2 , 2 ] ] , 
[ 'button' , 'Set Pester to 80' , 'comm_personal_pester_set' , null , true , 80  , true ] , 
[ 'button' , 'Set Pester to 100' , 'comm_personal_pester_set' , null , true , 100  , true ] , 
[ 'button' , 'Set Log to 80' , 'comm_personal_log_set' , null , true , 80  , true ] ,  
[ 'button' , 'Set Log to 100' , 'comm_personal_log_set' , null , true , 100  , true ] 
]"/>
            <!-- End of Pester Level Settings -->
          </do_if>
          <open_conversation_menu menu="ut_genericui" param="$genericuiparam"/>
          <add_conversation_view view="closeupdetailmonitor"/>
        </do_if>
        <!-- Money Sub-Menus and Actions -->
        <do_elseif value="event.param == 'comm_personal_money_minbudget'">
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <add_npc_line speaker="player.entity" line="[1400,1401,1402].random" hidechoices="false" comment="lets talk about this in detail"/>
            <add_npc_line speaker="event.object" line="[1008].random" hidechoices="false" comment="Yes? What do you want us to do?"/>
          </do_if>
          <open_conversation_menu menu="SetMoneyLimitMenu" param="[0, 0, event.object, 'min']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_personal_money_maxbudget'">
          <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
            <add_npc_line speaker="player.entity" line="[1400,1401,1402].random" hidechoices="false" comment="lets talk about this in detail"/>
            <add_npc_line speaker="event.object" line="[1008].random" hidechoices="false" comment="Yes? What do you want us to do?"/>
          </do_if>
          <open_conversation_menu menu="SetMoneyLimitMenu" param="[0, 0, event.object, 'max']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_personal_money_transfer'">
          <do_if value="event.param2 != null">
            <do_if value="event.param2 gt 0">
              <transfer_money from="player.entity" to="event.object" amount="event.param2"/>
            </do_if>
            <do_elseif value="event.param2 lt 0">
              <transfer_money from="event.object" to="player.entity" amount="0 - event.param2"/>
            </do_elseif>
            <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
          </do_if>
          <do_else>
            <do_if value="event.object.$ut_cac.$pesterlevel gt param.ut_cac.pesterlevel.$mayspeak">
              <add_npc_line speaker="player.entity" line="[1400,1401,1402].random" hidechoices="false" comment="lets talk about this in detail"/>
              <add_npc_line speaker="event.object" line="[1008].random" hidechoices="false" comment="Yes? What do you want us to do?"/>
            </do_if>
            <open_conversation_menu menu="MoneyTransferMenu" param="[0, 0, event.object]"/>
          </do_else>
        </do_elseif>
        <!-- Transfer Sub-Menus and Actions -->
        <do_elseif value="event.param == 'comm_personal_work_toggle'">
          <set_value name="event.object.$defaultorders.$inactive" exact="not @event.object.$defaultorders.$inactive"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_personal_transfer'">
          <do_if value="$jobselected?">
            <remove_value name="$jobselected"/>
            <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
          </do_if>
          <do_else>
            <open_conversation_menu menu="UTMapMenu" param="[0, 0, 'sector', event.object.container.sector, null, event.object.container.zone, 'selectobject', ['comm_personal_transfer_objectselected']]"/>
            <add_conversation_view view="closeupdetailmonitor" />
            <!-- Depending on whether a Ship is available display Map restricted to Zone or Galaxy to select new Work place -->
          </do_else>
        </do_elseif>
        <do_elseif value="event.param == 'comm_personal_transfer_objectselected'">
          <do_if value="$jobselected?">
            <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
          </do_if>
          <do_else>
            <!-- present the Player a choice of possible Jobs the Entity can do on the selected Object.
            => For Player Stations its Manager, DO, ( Engineer ),( Pilot ) and Standby
            => For Player Bigships its Captain, DO, Engineer and Standby
                => For CVs also offer Standby as Station Entity for completed Station.
            => For Player Smallships its Pilot, DO, an Engineer, limited capacity
            => For Other Stations its Trade Agent/Info Broker or Standby
                => For Shipyards also Offer Standby for Ship Positions (and possibly by Extension double-Standby for CVs) -->
            <set_value name="$selectedobject" exact="event.param2.{3}"/>
            <do_if value="$selectedobject.isplayerowned">
              <do_if value="$selectedobject.isclass.{[class.ship_l,class.ship_xl]}">
                <!-- Jobs:
                1 Captain
                2 DO
                3 Engineer
                -->
                <add_player_choice_sub text="'Captain'" position="1" section="comm_personal_transfer_jobselected" choiceparam="'captain'"/>
                <add_player_choice_sub text="'Defense'" position="2" section="comm_personal_transfer_jobselected" choiceparam="'defense'"/>
                <add_player_choice_sub text="'Engineer'" position="3" section="comm_personal_transfer_jobselected" choiceparam="'engineer'"/>
                <do_if value="$selectedobject.buildmodule.exists" comment="Is Constructionvessel?">
                  <!-- 4 Architect-->
                  <!-- 5 Standby for Station completion - new sub-Menu:
                            .1 Manager
                            .2 DO
                            .3 Engineer
                  -->
                  <add_player_choice_sub text="'Architect'" position="4" section="comm_personal_transfer_jobselected" choiceparam="'architect'"/>
                  <do_if value="$selectedobject.buildmodule.buildanchor.isconstruction or not $selectedobject.buildmodule.buildanchor.exists">
                    <add_player_choice_sub text="'Manager'" position="5" section="comm_personal_transfer_jobselected" choiceparam="'manager'"/>
                    <add_player_choice_sub text="'Wait till construction complete as..'" position="6" section="comm_personal_transfer_standby_as"/>
                  </do_if>
                </do_if>
                <do_else>
                  <set_value name="$iscarrier" exact="false" />
                  <do_all exact="4" counter="$i">
                    <find_dock_location container="$selectedobject" size="[tag.dock_m, tag.dock_s, tag.dock_xl, tag.dock_l].{$i}" name="$dock_found"/>
                    <do_if value="$dock_found.exists">
                      <break/>
                    </do_if>
                  </do_all>
                  <do_if value="$dock_found.exists">
                    <!-- 5 Pilot (for contained small Ships - Functionality not present yet - just reserving the slot -->
                    <add_player_choice_sub text="'Pilot for Fighters'" position="5" section="comm_personal_transfer_jobselected" choiceparam="'carrier pilot'" selectable="false" tooltip="'Not Implemented Yet'"/>
                  </do_if>
                  <remove_value name="$dock_found"/>
                </do_else>
              </do_if>
              <do_elseif value="$selectedobject.isclass.ship">
                <!-- Jobs:
                1 Pilot
                2 DO (2 or 3-seater only, and only when there are Turrets!)
                3 Engineer (2 or 3-seater only)
                -->
                <add_player_choice_sub text="'Pilot'" position="1" section="comm_personal_transfer_jobselected" choiceparam="'pilot'"/>
                <add_player_choice_sub text="'Defense'" position="2" section="comm_personal_transfer_jobselected" choiceparam="'defense'" selectable="false" tooltip="'Not Implemented Yet'"/>
                <add_player_choice_sub text="'Engineer'" position="3" section="comm_personal_transfer_jobselected" choiceparam="'engineer'" selectable="false" tooltip="'Not Implemented Yet'"/>
              </do_elseif>
              <do_elseif value="$selectedobject.isclass.station">
                <!-- Jobs:
                1 Manager
                2 DO
                3 Engineer
                -->
                <add_player_choice_sub text="'Manager'" position="1" section="comm_personal_transfer_jobselected" choiceparam="'manager'"/>
                <add_player_choice_sub text="'Defense'" position="2" section="comm_personal_transfer_jobselected" choiceparam="'defense'"/>
                <add_player_choice_sub text="'Engineer'" position="3" section="comm_personal_transfer_jobselected" choiceparam="'engineer'"/>
                <do_if value="$selectedobject.canbuildships">
                  <!-- 5 Standby for constructed Ships -->
                  <add_player_choice_sub text="'Wait till construction complete as..'" position="5" section="comm_personal_transfer_standby_as"/>
                </do_if>
              </do_elseif>
            </do_if>
            <do_else>
              <do_if value="$selectedobject.isclass.station">
                <!-- Jobs:
                5 Trade Agent
                -->
                <add_player_choice_sub text="'Trade Agent'" position="5" section="comm_personal_transfer_jobselected" choiceparam="'tradeagent'"/>
                <do_if value="$selectedobject.canbuildships" comment="Big">
                  <!-- Standby for completed Construction as:
                  1 - Captain
                  2 - DO
                  3 - Engineer
                  4 - Architect -->
                  <add_player_choice_sub text="'Standby - Captain'" position="1" section="comm_personal_transfer_jobselected" choiceparam="'standby captain'"/>
                  <add_player_choice_sub text="'Standby - Defense'" position="2" section="comm_personal_transfer_jobselected" choiceparam="'standby defense'"/>
                  <add_player_choice_sub text="'Standby - Engineer'" position="3" section="comm_personal_transfer_jobselected" choiceparam="'standy engineer'"/>
                  <add_player_choice_sub text="'Standby - Architect'" position="4" section="comm_personal_transfer_jobselected" choiceparam="'standby architect'"/>
                </do_if>
              </do_if>
              <do_elseif value="$selectedobject.isconstructionvessel">
                <!-- Jobs:
                4 Standby as Trade Agent for completed Station
                5 Trade Agent
                -->
                <add_player_choice_sub text="'Standby - Trade Agent'" position="4" section="comm_personal_transfer_jobselected" choiceparam="'standby tradeagent'"/>
                <add_player_choice_sub text="'Trade Agent'" position="5" section="comm_personal_transfer_jobselected" choiceparam="'tradeagent'"/>
              </do_elseif>
            </do_else>
            <!-- 6 Standby on Object -->
            <add_player_choice_sub text="'Wait there'" position="6" section="comm_personal_transfer_jobselected" choiceparam="'standby'"/>
          </do_else>
        </do_elseif>
        <do_elseif value="event.param == 'comm_personal_transfer_standby_as'">
          <do_if value="$jobselected?">
            <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
          </do_if>
          <do_else>
            <do_if value="$selectedobject.isclass.ship and $selectedobject.buildmodule.exists" comment="Is Constructionvessel?">
              <!-- Standby for completed Construction as:
              1 Manager
              2 DO
              3 Engineer
              -->
              <add_player_choice_sub text="'Standby - Manager'" position="1" section="comm_personal_transfer_jobselected" choiceparam="'standby manager'"/>
              <add_player_choice_sub text="'Standby - Defense'" position="2" section="comm_personal_transfer_jobselected" choiceparam="'standby defense'"/>
              <add_player_choice_sub text="'Standby - Engineer'" position="3" section="comm_personal_transfer_jobselected" choiceparam="'standby engineer'"/>
            </do_if>
            <do_elseif value="$selectedobject.isclass.station" comment="Is Shipyard?">
                  <!-- Standby for completed Construction as:
                  1 - Captain
                  2 - DO
                  3 - Engineer
                  4 - Architect -->
                  <add_player_choice_sub text="'Standby - Captain'" position="1" section="comm_personal_transfer_jobselected" choiceparam="'standby captain'"/>
                  <add_player_choice_sub text="'Standby - Defense'" position="2" section="comm_personal_transfer_jobselected" choiceparam="'standby defense'"/>
                  <add_player_choice_sub text="'Standby - Engineer'" position="3" section="comm_personal_transfer_jobselected" choiceparam="'standy engineer'"/>
                  <add_player_choice_sub text="'Standby - Architect'" position="4" section="comm_personal_transfer_jobselected" choiceparam="'standby architect'"/>
            </do_elseif>
              <add_player_choice_sub text="'Just Wait there'" position="6" section="comm_personal_transfer_jobselected" choiceparam="'standby'"/>
          </do_else>
        </do_elseif>
        <do_elseif value="event.param == 'comm_personal_transfer_jobselected'">
          <signal_objects object="event.object" param="'new order'" param2="table[$script='ut.cac.com.personal.transfer',$displayname='Transfer to %1; mode: %2'.[$selectedobject.name,event.param2],$destination=$selectedobject,$job=event.param2,$interruptable=true]"/>
          <set_value name="$jobselected"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <!-- Log/Pesterlevel Actions -->
        <do_elseif value="event.param == 'comm_personal_pester_set'">
          <set_value name="event.object.$ut_cac.$pesterlevel" exact="event.param2"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_personal_log_set'">
          <set_value name="event.object.$ut_cac.$loglevel" exact="event.param2"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
      </actions>
    </cue>
    <!-- Root Choice 6: Goodbye Section -->
    <cue name="Comm_Common_Goodbye" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_goodbye"/>
          <event_conversation_returned_to_section sectionprefix="comm_goodbye"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2:\nevent.param= %3 event.param2= %4 event.param3= %5'.[event.object.name,event.name,event.param,event.param2,event.param3]"/>
      </actions>
    </cue>
    <!-- Root Choice 6: Debug Menu -->
    <cue name="Comm_Common_Debug" instantiate="true">
      <conditions>
        <check_any>
          <event_conversation_next_section sectionprefix="comm_debug_"/>
          <event_conversation_returned_to_section sectionprefix="comm_debug_"/>
          <event_cue_signalled/>
        </check_any>
      </conditions>
      <actions>
        <debug_text filter="general" chance="@event.object.$debug * 100" text="'%1 %2 event.name= %3 \nevent.param= %4 event.param2= %5 event.param3= %6'.[event.object.name,event.object.container.name,event.name,event.param,event.param2,event.param3]"/>
        <do_if value="event.param == 'comm_debug_main'">
          <set_value name="$genericuiparam" exact=" [ 0 , 0 , 'Debug Menu for %1'.[event.object.name], null, null , null , [ 116 , 116 , 116 , 116 , 116 , 116 , 116 , 116 , 116 , -1 ] ,  [] ,  [ 
[ 'button' , 'Back' , null , 'INPUT_STATE_DETAILMONITOR_B' , true ] , 
[ 'button' , 'UNUSED' , '' , 'INPUT_STATE_DETAILMONITOR_BACK' , true , null , true] , 
[ 'button' ,  'UNUSED' , '' , 'INPUT_STATE_DETAILMONITOR_Y' , true , null , true ] , 
[ 'button' , 'Details', 'comm_debug_data_details' , 'INPUT_STATE_DETAILMONITOR_X' , true ] 
] ]"/>
          <!-- Local Variables  -->
          <append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 10 ] ] , [ 'text' , 'Debug Functions' ] ]"/>
          <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 2 , 2 , 2 , 2 ] ] , 
[ 'button' , 'Max Skills' , 'comm_debug_skills_set' , false , true , 5 ] , 
[ 'button' , 'Min Skills' , 'comm_debug_skills_set' , false , true , 1 ] , 
[ 'button' , 'Remove Actor' , 'comm_debug_cleanup_actor' , false , true ] , 
[ 'button' , 'Debug: ' + @event.object.$debug , 'comm_debug_toggle' , false , true ] , 
[ 'button' , 'Remove Object' , 'comm_debug_cleanup_object' , false , true] 
]"/>
          <do_if value="event.object.$orderlist?">
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'header' , [ 10 ] ] , [ 'text' , 'Orderlist Details' ] ]"/>
            <do_all exact="event.object.$orderlist.count" counter="$i" reverse="false">
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 1 , 3 , 6 ], 'comm_debug_data_details' , @event.object.$orderlist.{$i} ] ,  
[ 'text' , 'i:%1 e:%2'.[@event.object.$orderlist.{$i}.$interruptable , @event.object.$orderlist.{$i}.$exitonneworder] ] , 
[ 'text' , @event.object.$orderlist.{$i}.$script ] , 
[ 'text' , @event.object.$orderlist.{$i}.$displayname ] 
]"/>
            </do_all>
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'invisible' , [ 1 , 3 , 6] ] ,  
[ 'text' , 'VVVVV'] , 
[ 'text' , '$script' ] , 
[ 'text' , '$displayname' ] ,
null
]"/>
            <append_to_list name="$genericuiparam.{8}" exact="[ [ 'invisible' , [ 10 ] ] , [ 'text' , 'i: $interruptable; e: $exitonneworder'] ]"/>
          </do_if>
          <open_conversation_menu menu="ut_genericui" param="$genericuiparam"/>
          <add_conversation_view view="closeupdetailmonitor"/>
        </do_if>
        <do_elseif value="event.param == 'comm_debug_skills_set'">
          <set_value name="$skillist" exact="[ skilltype.boarding , skilltype.combat , skilltype.engineering , skilltype.leadership , skilltype.management , skilltype.morale , skilltype.navigation , skilltype.science ]"/>
          <do_all exact="$skillist.count" counter="$i">
            <set_skill entity="event.object" type="$skillist.{$i}" exact="event.param2"/>
          </do_all>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_debug_toggle'">
          <set_value name="event.object.$debug" exact="not @event.object.$debug"/>
          <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_debug_cleanup_actor'">
          <destroy_object object="event.object" explosion="false"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_debug_cleanup_object'">
          <disconnect_from_build_location object="event.object.container.buildingmodule.container"/>
          <destroy_object object="event.object.container" explosion="false"/>
        </do_elseif>
        <do_elseif value="event.param == 'comm_debug_data_details'">
          <do_if value="event.name == 'event_conversation_returnd_to_section'">
            <open_conversation_menu menu="UTConversationControl" param="[0, 0, 'return']"/>
          </do_if>
          <do_else>
            <set_value name="$genericuiparam" exact=" [ 0 , 0 , 'Data Details for a %1'.[typeof event.param2], null, null , null , [ 40 , 210 , -1 ] ,  [] ,  [ 
[ 'button' , 'Back' , null , 'INPUT_STATE_DETAILMONITOR_B' , true ] , 
null , null , 
[ 'button' , 'Details', 'comm_debug_data_details' , 'INPUT_STATE_DETAILMONITOR_X' , true ]
] ]"/>
            <do_if value="typeof event.param2 == datatype.table">
              <set_value name="$keys" exact="event.param2.keys.list"/>
              <do_all exact="$keys.count" counter="$i">
                <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 1 ], null , $keys.{$i} ] , 
[ 'text' , '' + ( typeof event.param2.{$keys.{$i}} ) ] ,
[ 'text' , $keys.{$i} ] 
]"/>
                <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 1, 2 ] , null , event.param2.{$keys.{$i}} ] , 
[ 'text' , '+>' ] ,
[ 'text' , '' + event.param2.{$keys.{$i}} ]
]"/>
              </do_all>
              <remove_value name="$keys"/>
            </do_if>
            <do_elseif value="typeof event.param2 == datatype.list">
              <do_all exact="event.param2.count" counter="$i">
                <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 1 ] , null , event.param2.{$i} ] , 
[ 'text' , '' + ( typeof event.param2.{$i} ) ] ,
[ 'text' , event.param2.{$i} ] 
]"/>
                <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 1, 2 ] , null , event.param2.{$i} ] , 
[ 'text' , '+>' ] ,
[ 'text' , '' + event.param2.{$i} ]
]"/>
              </do_all>
            </do_elseif>
            <do_elseif value="@event.param2.isclass.component">
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2, 1 ] ] ,
[ 'text' , 'value' ] ,
[ 'text' , '' + event.param2 ] 
]"/>
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2, 1 ] ] ,
[ 'text' , 'name' ] ,
[ 'text' , '' + event.param2.name ] 
]"/>
            </do_elseif>
            <do_else>
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 3] ] , 
[ 'text' , 'No Data Type for which further Details can be displayed' ] 
]"/>
              <append_to_list name="$genericuiparam.{8}" exact="[ [ 'regular' , [ 2 , 1 ] ] , 
[ 'text' , '' + ( typeof event.param2 ) ] ,
[ 'text' , '' + event.param2 ] 
]"/>
            </do_else>
            <open_conversation_menu menu="ut_genericui" param="$genericuiparam"/>
          </do_else>
        </do_elseif>
        <do_else>
          <debug_text filter="error" text="'%1 %2 Unknown Section: %3'.[event.object.name,event.object.container.name,event.param]"/>
        </do_else>
      </actions>
    </cue>
  </cues>
</mdscript>
