<?xml version="1.0" encoding="UTF-8"?>
<aiscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="ut.cac.com.manager.findjob.trade" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd" version="1">
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
    <param name="entity" default="false" comment="Entity who needs (Trade)Orders (NOT as Ship)"/>
  </params>
  <interrupts>
  </interrupts>
  <attention min="unknown">
    <actions>
      <do_if value="$params">
        <do_if value="$params.$entity?">
          <set_value name="$entity" exact="$params.$entity"/>
        </do_if>
      </do_if>
      <remove_value name="$params"/>
      <do_if value="not $entity.exists">
        <debug_text filter="error" text="'%1 %2 No Entity passed to give Trade Orders to - aborting'.[this.name,this.container.name]"/>
        <return value="false"/>
      </do_if>
      
      <set_command_action commandaction="commandaction.searchingtrades"/>
      <do_if value="this.$ut_cac?">
        <set_value name="this.$ut_cac.$isactive"/>
      </do_if>
      <wait exact="1s"/>
      
      <!-- Check if the Ship is a mining Ship and if yes -> when a mineable Ressource either has a prio of 1.0 or is encountered on the offer List send it mining instead of shopping -->
      <!-- =============================== -->
      <!-- check wheter the Ship is a mining Ship - Assume that Miningships with gascollectors have a liquid cargobay and Ships with miningturret and orecollectors have a bulk cargobay -->
      <set_value name="$miningship" exact="false"/>
      <do_if value="$entity.ship.primarypurpose ==objectpurpose.mine and $entity.ship.units.{unitcategory.gascollector}.count gt 0">
        <set_value name="$miningship" exact="true"/>
      </do_if>
      <do_else>
        <check_object object="$entity.ship" result="$miningturret">
          <match_summarised_turret macro="macro.turret_medium_ml_macro"/>
        </check_object>
        <do_if value="$miningturret and $entity.ship.units.{unitcategory.orecollector}.count gt 0">
          <set_value name="$miningship" exact="true"/>
        </do_if>
      </do_else>
      <!-- set Mining as Priority if set up this way -->
      <do_if value="$miningship">
        <do_if value="$entity.$ut_cac.$miningpriority?">
          <set_value name="$miningpriority" exact="$entity.$ut_cac.$miningpriority"/>
        </do_if>
        <do_elseif value="this.$ut_cac.$miningpriority?">
          <set_value name="$miningpriority" exact="this.$ut_cac.$miningpriority"/>
        </do_elseif>
        <do_else>
          <set_value name="$miningpriority" exact="false"/>
        </do_else>
      </do_if>
      <do_else>
        <set_value name="$miningpriority" exact="false"/>
      </do_else>
      
      <!-- to suppress unnecesary debug output (dont want to remove it completely yet, but its too verbose) -->
      <set_value name="$debug_detailoutput" exact="false" comment="@this.$debug * 100" />
      
      
      <!-- Get Range to be used - either Jump Range or Tube Range -->
      <do_if value="$entity.ship.isclass.{[class.ship_xl , class.ship_l]}">
        <set_value name="$range" exact="this.$ut_cac.$range_j"/>
      </do_if>
      <do_elseif value="$entity.ship.canenterhighway">
        <set_value name="$range" exact="this.$ut_cac.$range_h"/>
      </do_elseif>
      <!-- fallback case: ship can neither jump nor enter tubes - restricted to Zone Trade -->
      <do_else>
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Fallback: Zone Range'.[this.name,this.container.name]"/>
        <set_value name="$range" exact="[this.zone]"/>
      </do_else>
      <set_value name="$range_w" exact="this.$ut_cac.$range_w"/>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Finding Trade order for: %3 on %4 in range %5'.[this.name,this.container.name,$entity.name,$entity.container.name,$range]"/>
      
      <!-- Get List of Managed Objects - currently CV and Station itself -->
      <create_list name="$managed_objects"/>
      <do_if value="this.station.exists">
        <append_to_list name="$managed_objects" exact="this.station"/>
        <do_if value="this.station.buildingmodule.exists">
          <append_to_list name="$managed_objects" exact="this.station.buildingmodule.ship"/>
        </do_if>
      </do_if>
      <do_if value="this.ship and this.ship.buildmodule.exists">
          <append_to_list name="$managed_objects" exact="this.ship"/>
      </do_if>
      
      
      <!-- Create Lists of Wares to be traded by Managed Objects and order them by Wanted Amount Ratio - their priority (inverse value for selled Wares -->
      <create_list name="$wareslist"/>
      <create_list name="$wareslist_prio"/>
      <create_list name="$wareslist_buysell"/>
      <create_list name="$wareslist_object"/>
      
      <!-- iterate through all Managed Trade Objects' Ressources/Materials (to maybe seperate out mining stuffs)-->
      <do_all exact="$managed_objects.count" counter="$i">
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Checking Needs of %3'.[this.name,this.container.name,$managed_objects.{$i}.name]"/>
        <!-- Add Buildmaterials needed by a CV -->
        <do_if value="$managed_objects.{$i}.isclass.ship">
          <do_if value="$managed_objects.{$i}.buildmodule.isbuilding">
            <set_value name="$buildmaterial_insert_pos" exact="1"/>
            <do_all exact="$wareslist_prio.count" counter="$j" reverse="true">
              <do_if value="$wareslist_prio.{$j} ge $prio">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Got buildmaterial Insert Pos at ' + $j"/>
                <set_value name="$buildmaterial_insert_pos" exact="$j"/>
                <break/>
              </do_if>
            </do_all>
            <do_all exact="$managed_objects.{$i}.buildmodule.neededslotresources.list.count" counter="$j">
              <set_value name="$ware" exact="$managed_objects.{$i}.buildmodule.neededslotresources.list.{$j}"/>
              <!-- not interested in Wares which the Ship cannt transport -->
              <do_if value="$entity.ship.cargo.{$ware}.free le 0">
                <debug_text filter="general" chance="$debug_detailoutput" text="'%1 Ship has no space for it'.[$ware]"/>
                <continue/>
              </do_if>
              
              <!-- legality filter - wheter the ware is added to the List depends on the Settings of the Manager -->
              <do_if value="$ware.illegal and this.$ut_cac.$legality ge 3">
                <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal'.[$ware]"/>
                <continue/>
              </do_if>
              <do_elseif value="not this.zone.policefaction and $ware.illegal and this.$ut_cac.$legality ge 1">
                <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal and current Zone has no policefaction for licenses'.[$ware]"/>
                <continue/>
              </do_elseif>
              <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{null} and this.$ut_cac.$legality ge 2">
                <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal in this Zone'.[$ware]"/>
                <continue/>
              </do_elseif>
              <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{this.trueowner} and this.$ut_cac.$legality ge 1">
                <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal in this Zone and we dont have a license'.[$ware]"/>
                <continue/>
              </do_elseif>
              <do_elseif value="this.$ut_cac.$legality == 0">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Buying anything - including %1'.[$ware]"/>
              </do_elseif>
              <do_else>
                <debug_text filter="general" chance="$debug_detailoutput" text="'Buying %1'.[$ware]"/>
              </do_else>
              
              <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$incomingamount" type="sell"/>
              <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$outgoingamount" type="buy"/>
              <!-- check if we still need this Ware (taking reservations into account) and continue if not -->
              <do_if value="( $managed_objects.{$i}.buildmodule.neededslotresources.{$ware}.count - $incomingamount + $outgoingamount ) le 0">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Skipping Ware beause delivery is already on the way'"/>
                <continue/>
              </do_if>
              <set_value name="$prio" exact="param.ut_cac.waretypepriorities.$buildingmaterial"/>
              <debug_text filter="general" chance="$debug_detailoutput" text="'Prio for Building Material is: ' + $prio"/>
              <!-- no need to include the Wares where we have the desired amount -->
              <debug_text filter="general" chance="$debug_detailoutput" text="'Adding it to the pre-calculated pos of the List'"/>
              <set_value name="$wareslist.{$buildmaterial_insert_pos}" exact="$ware" operation="insert"/>
              <set_value name="$wareslist_prio.{$buildmaterial_insert_pos}" exact="$prio" operation="insert"/>
              <set_value name="$wareslist_buysell.{$buildmaterial_insert_pos}" exact="'buy'" operation="insert"/>
              <set_value name="$wareslist_object.{$buildmaterial_insert_pos}" exact="$managed_objects.{$i}" operation="insert"/>
              <!-- set value to indicate that a mineable ware is still needed for construction to prevent looking for other Wares even if they have the same prio -->
              <do_if value="$ware.tags.indexof.{tag.minable} and $miningship">
                <set_value name="$miningpriority" exact="true"/>
              </do_if>
            </do_all>
          </do_if>
        </do_if>
        <do_elseif value="$managed_objects.{$i}.isclass.station">
          <do_all exact="$managed_objects.{$i}.resources.list.count" counter="$j">
            <set_value name="$ware" exact="$managed_objects.{$i}.resources.list.{$j}"/>
            <!-- not interested in Wares which the Ship cannt transport -->
            <do_if value="$entity.ship.cargo.{$ware}.free le 0">
              <debug_text filter="general" chance="$debug_detailoutput" text="'%1 Ship has no space for it'.[$ware]"/>
              <continue/>
            </do_if>
            
            <!-- legality filter - wheter the ware is added to the List depends on the Settings of the Manager -->
            <do_if value="$ware.illegal and this.$ut_cac.$legality ge 3">
              <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal'.[$ware]"/>
              <continue/>
            </do_if>
            <do_elseif value="not this.zone.policefaction and $ware.illegal and this.$ut_cac.$legality ge 1">
              <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal and current Zone has no policefaction for licenses'.[$ware]"/>
              <continue/>
            </do_elseif>
            <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{null} and this.$ut_cac.$legality ge 2">
              <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal in this Zone'.[$ware]"/>
              <continue/>
            </do_elseif>
            <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{this.trueowner} and this.$ut_cac.$legality ge 1">
              <debug_text filter="general" chance="$debug_detailoutput" text="'not buying %1 because it is illegal in this Zone and we dont have a license'.[$ware]"/>
              <continue/>
            </do_elseif>
            <do_elseif value="this.$ut_cac.$legality == 0">
              <debug_text filter="general" chance="$debug_detailoutput" text="'Buying anything - including %1'.[$ware]"/>
            </do_elseif>
            <do_else>
              <debug_text filter="general" chance="$debug_detailoutput" text="'Buying %1'.[$ware]"/>
            </do_else>
            
            <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$incomingamount" type="sell"/>
            <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$outgoingamount" type="buy"/>
            
            <set_value name="$prio" exact="1.0 - ( ( $managed_objects.{$i}.cargo.{$ware}.count + $incomingamount - $outgoingamount)f  / ( $managed_objects.{$i}.cargo.{$ware}.target )f )"/>
            <do_if value="$managed_objects.{$i}.resources.{$ware}.secondary">
              <set_value name="$prio" exact="$prio * param.ut_cac.waretypepriorities.$secondaryressource"/>
              <debug_text filter="general" chance="$debug_detailoutput" text="'Prio for Secondary ressource is: ' + $prio"/>
            </do_if>
            <do_else>
              <set_value name="$prio" exact="$prio * param.ut_cac.waretypepriorities.$ressource"/>
              <debug_text filter="general" chance="$debug_detailoutput" text="'Prio for Primary Ressource is: ' + $prio"/>
            </do_else>
            <!-- no need to include the Wares where we have the desired amount -->
            <do_if value="$prio gt 0.0">
              <!-- prio 1.0, so always in the beginning (higher prios are possible for products, see the respective part) -->
              <do_if value="$prio == 1f">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Adding it to the beginning of the List'"/>
                <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
                <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
                <set_value name="$wareslist_buysell.{1}" exact="'buy'" operation="insert"/>
                <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
                <!-- set value to indicate that a mineable ware is needed with prio 1.0 right now to prevent looking for other Wares even if they have the same prio -->
                <do_if value="$ware.tags.indexof.{tag.minable} and $miningship">
                  <set_value name="$miningpriority" exact="true"/>
                </do_if>
              </do_if>
              <!-- first Value in the Target List, no need for any Sorting-->
              <do_elseif value="$wareslist.count == 0">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Starting the List with it'"/>
                <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
                <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
                <set_value name="$wareslist_buysell.{1}" exact="'buy'" operation="insert"/>
                <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
              </do_elseif>
              <do_else>
                <set_value name="$inserted" exact="false"/>
                <do_all exact="$wareslist_prio.count" counter="$j" reverse="true">
                  <do_if value="$wareslist_prio.{$j} ge $prio">
                    <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List At Position ' + $j"/>
                    <set_value name="$wareslist.{$j+1}" exact="$ware" operation="insert"/>
                    <set_value name="$wareslist_prio.{$j+1}" exact="$prio" operation="insert"/>
                    <set_value name="$wareslist_buysell.{$j + 1}" exact="'buy'" operation="insert"/>
                    <set_value name="$wareslist_object.{$j+1}" exact="$managed_objects.{$i}" operation="insert"/>
                    <set_value name="$inserted" exact="true"/>
                    <break/>
                  </do_if>
                </do_all>
                <do_if value="not $inserted">
                  <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List As first item'"/>
                  <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
                  <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
                  <set_value name="$wareslist_buysell.{1}" exact="'buy'" operation="insert"/>
                  <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
                </do_if>
              </do_else>
            </do_if>
          </do_all>
        </do_elseif>
      </do_all>
      
      
      <!-- if it is a mining Ship and Mining is very important right now/by Player Choice send it directly to mining, no need to search for other stuff yet -->
      <do_if value="$miningpriority">
        <do_all exact="$wareslist.count" counter="$i">
        <do_if value="$wareslist.{$i}.tags.indexof.{tag.minable}">
          <debug_text filter="general" chance="@this.$debug * 100" text="'Checking Ressorces for mining: %1 (Priority Case)'.[$wareslist.{$i}]"/>
            <run_script name="'ut.cac.com.manager.findjob.mine'" result="$success">
              <param name="entity" value="$entity"/>
              <param name="range" value="$range"/>
              <param name="range_w" value="$range_w"/>
              <param name="ware" value="$wareslist.{$i}"/>
              <param name="object" value="$wareslist_object.{$i}"/>
            </run_script>
            <do_if value="$success">
              <return value="true"/>
            </do_if>
            <remove_value name="$success"/>
          </do_if>
        </do_all>
      </do_if>
      
      <!-- now add the Products and Tradewares to the Lists -->
      <do_all exact="$managed_objects.count" counter="$i">
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Checking Products/Tradewares of %3'.[this.name,this.container.name,$managed_objects.{$i}.name]"/>
        <do_all exact="$managed_objects.{$i}.products.list.count" counter="$i">
          <set_value name="$ware" exact="$managed_objects.{$i}.products.list.{$i}"/>
          <!-- not interested in Wares which the Ship cannt transport -->
          <do_if value="$entity.ship.cargo.{$ware}.free le 0">
            <debug_text filter="general" chance="$debug_detailoutput" text="'%1 Ship has no space for it'.[$ware]"/>
            <continue/>
          </do_if>
          <!-- legality filter - wheter the ware is added to the List depends on the Settings of the Manager -->
          <do_if value="$ware.illegal and this.$ut_cac.$legality ge 3">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not selling %1 because it is illegal'.[$ware]"/>
            <continue/>
          </do_if>
          <do_elseif value="not this.zone.policefaction and $ware.illegal and this.$ut_cac.$legality ge 1">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not selling %1 because it is illegal and current Zone has no policefaction for licenses'.[$ware]"/>
            <continue/>
          </do_elseif>
          <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{null} and this.$ut_cac.$legality ge 2">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not selling %1 because it is illegal in this Zone'.[$ware]"/>
            <continue/>
          </do_elseif>
          <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{this.trueowner} and this.$ut_cac.$legality ge 1">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not selling %1 because it is illegal in this Zone and we dont have a license'.[$ware]"/>
            <continue/>
          </do_elseif>
          <do_elseif value="this.$ut_cac.$legality == 0">
            <debug_text filter="general" chance="$debug_detailoutput" text="'Selling anything - including %1'.[$ware]"/>
          </do_elseif>
          <do_else>
            <debug_text filter="general" chance="$debug_detailoutput" text="'Selling %1'.[$ware]"/>
          </do_else>
          
          <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$incomingamount" type="sell"/>
          <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$outgoingamount" type="buy"/>
          <set_value name="$prio" exact="( $managed_objects.{$i}.cargo.{$ware}.count + $incomingamount - $outgoingamount )f / ( $managed_objects.{$i}.cargo.{$ware}.target )f"/>
          <!-- modify prio value (-1.0, but not negative) in case of intermediate ware (should only be sold over the target value ) -->
          <do_if value="$managed_objects.{$i}.products.{$ware}.intermediate">
            <set_value name="$prio" exact="[0.0,$prio-1.0].max"/>
          </do_if>
          <set_value name="$prio" exact="$prio * param.ut_cac.waretypepriorities.$product"/>
          <debug_text filter="general" chance="$debug_detailoutput" text="'Prio for Product is: ' + $prio"/>
          <!-- no need to include the Wares we dont have in cargo (prio results in 0.0) -->
          <do_if value="$prio gt 0.0">
            <!-- first Value in the Target List, no need for any Sorting-->
            <do_if value="$wareslist.count == 0">
              <debug_text filter="general" chance="$debug_detailoutput" text="'Starting the List with it'"/>
              <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
              <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
              <set_value name="$wareslist_buysell.{1}" exact="'sell'" operation="insert"/>
              <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
            </do_if>
            <do_else>
              <set_value name="$inserted" exact="false"/>
              <do_all exact="$wareslist_prio.count" counter="$j" reverse="true">
                <do_if value="$wareslist_prio.{$j} ge $prio">
                  <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List At Position ' + $j"/>
                  <set_value name="$wareslist.{$j+1}" exact="$ware" operation="insert"/>
                  <set_value name="$wareslist_prio.{$j+1}" exact="$prio" operation="insert"/>
                  <set_value name="$wareslist_buysell.{$j+1}" exact="'sell'" operation="insert"/>
                  <set_value name="$wareslist_object.{$j+1}" exact="$managed_objects.{$i}" operation="insert"/>
                  <set_value name="$inserted" exact="true"/>
                  <break/>
                </do_if>
              </do_all>
              <do_if value="not $inserted">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List As first item'"/>
                <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
                <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
                <set_value name="$wareslist_buysell.{1}" exact="'sell'" operation="insert"/>
                <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
              </do_if>
            </do_else>
          </do_if>
        </do_all>
        
        <!-- now add Trade Wares to the List considered for Trading ( neither Product nor Ressource )-->
        <!-- ToDo: Make this conditional for when the Manager is experienced enough or this is a Trade Station -->
        <do_all exact="$managed_objects.{$i}.tradewares.list.count" counter="$i">
          <set_value name="$ware" exact="$managed_objects.{$i}.tradewares.list.{$i}"/>
          <!-- not interested in Tradewares which are alredy in the List (as Product or Ressource or intermediate) - Subject to change! -->
          <!--do_if value="$wareslist.indexof.{$ware}">
            <debug_text filter="general" chance="$debug_detailoutput" text="'%1 Tradeware is already in Warelist'.[$ware]"/>
            <continue/>
          </do_if-->
          <!-- not interested in Wares which the Ship cannt transport -->
          <do_if value="$entity.ship.cargo.{$ware}.free le 0">
            <debug_text filter="general" chance="$debug_detailoutput" text="'%1 Ship has no space for it'.[$ware]"/>
            <continue/>
          </do_if>
          <!-- legality filter - wheter the ware is added to the List depends on the Settings of the Manager -->
          <do_if value="$ware.illegal and this.$ut_cac.$legality ge 3">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not trading with %1 because it is illegal'.[$ware]"/>
            <continue/>
          </do_if>
          <do_elseif value="not this.zone.policefaction and $ware.illegal and this.$ut_cac.$legality ge 1">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not trading with %1 because it is illegal and current Zone has no policefaction for licenses'.[$ware]"/>
            <continue/>
          </do_elseif>
          <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{null} and this.$ut_cac.$legality ge 2">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not trading with %1 because it is illegal in this Zone'.[$ware]"/>
            <continue/>
          </do_elseif>
          <do_elseif value="this.zone.policefaction and $ware.illegalto.{this.zone.policefaction}.{this.trueowner} and this.$ut_cac.$legality ge 1">
            <debug_text filter="general" chance="$debug_detailoutput" text="'not trading with %1 because it is illegal in this Zone and we dont have a license'.[$ware]"/>
            <continue/>
          </do_elseif>
          <do_elseif value="this.$ut_cac.$legality == 0">
            <debug_text filter="general" chance="$debug_detailoutput" text="'Trading with anything - including %1'.[$ware]"/>
          </do_elseif>
          <do_else>
            <debug_text filter="general" chance="$debug_detailoutput" text="'Trading with %1'.[$ware]"/>
          </do_else>
          
          <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$incomingamount" type="sell"/>
          <get_ware_reservation ware="$ware" object="$managed_objects.{$i}" result="$outgoingamount" type="buy"/>
          <!-- first calculate the Buy Prio (half prio of Ressources), and insert it ionto the List - then do the same for Sell Prio -->
          <do_if value="$managed_objects.{$i}.resources.{$ware}.exists">
            <debug_text filter="general" chance="$debug_detailoutput" text="'Tradeware is also a Ressource so prio is 0.0 to prevent inclusion for buying'"/>
            <set_value name="$prio" exact="0.0"/>
          </do_if>
          <do_else>
            <set_value name="$prio" exact="( 1.0 - ( ( $managed_objects.{$i}.cargo.{$ware}.count + $incomingamount - $outgoingamount )f  / ( $managed_objects.{$i}.cargo.{$ware}.target )f ) )"/>
            <set_value name="$prio" exact="$prio * param.ut_cac.waretypepriorities.$tradeware"/>
            <debug_text filter="general" chance="$debug_detailoutput" text="'Prio for Tradeware Buying is: ' + $prio"/>
          </do_else>
          <!-- no need to include the Wares where we have the desired amount -->
          <do_if value="$prio gt 0.0">
            <!-- first Value in the Target List, no need for any Sorting-->
            <do_if value="$wareslist.count == 0">
              <debug_text filter="general" chance="$debug_detailoutput" text="'Starting the List with it'"/>
              <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
              <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
              <set_value name="$wareslist_buysell.{1}" exact="'buy'" operation="insert"/>
              <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
            </do_if>
            <do_else>
              <set_value name="$inserted" exact="false"/>
              <do_all exact="$wareslist_prio.count" counter="$j" reverse="true">
                <do_if value="$wareslist_prio.{$j} ge $prio">
                  <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List At Position ' + $j"/>
                  <set_value name="$wareslist.{$j+1}" exact="$ware" operation="insert"/>
                  <set_value name="$wareslist_prio.{$j+1}" exact="$prio" operation="insert"/>
                  <set_value name="$wareslist_buysell.{$j + 1}" exact="'buy'" operation="insert"/>
                  <set_value name="$wareslist_object.{$j+1}" exact="$managed_objects.{$i}" operation="insert"/>
                  <set_value name="$inserted" exact="true"/>
                  <break/>
                </do_if>
              </do_all>
              <do_if value="not $inserted">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List As first item'"/>
                <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
                <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
                <set_value name="$wareslist_buysell.{1}" exact="'buy'" operation="insert"/>
                <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
              </do_if>
            </do_else>
          </do_if>
          <!-- Sell Priority -->
          <do_if value="$managed_objects.{$i}.products.{$ware}.exists">
            <debug_text filter="general" chance="$debug_detailoutput" text="'Tradeware is also a Ressource so prio is 0.0 to prevent inclusion for selling'"/>
            <set_value name="$prio" exact="0.0"/>
          </do_if>
          <do_else>
            <set_value name="$prio" exact="( $managed_objects.{$i}.cargo.{$ware}.count  + $incomingamount - $outgoingamount )f / ( $managed_objects.{$i}.cargo.{$ware}.target )f"/>
            <set_value name="$prio" exact="$prio * param.ut_cac.waretypepriorities.$tradeware"/>
            <debug_text filter="general" chance="$debug_detailoutput" text="'Prio for Tradeware Selling is: ' + $prio"/>
          </do_else>
          <!-- no need to include the Wares we dont have in cargo (prio results in 0.0)-->
          <do_if value="$prio gt 0.0">
            <!-- first Value in the Target List, no need for any Sorting-->
            <do_if value="$wareslist.count == 0">
              <debug_text filter="general" chance="$debug_detailoutput" text="'Starting the List with it'"/>
              <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
              <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
              <set_value name="$wareslist_buysell.{1}" exact="'sell'" operation="insert"/>
              <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
            </do_if>
            <do_else>
              <set_value name="$inserted" exact="false"/>
              <do_all exact="$wareslist_prio.count" counter="$j" reverse="true">
                <do_if value="$wareslist_prio.{$j} ge $prio">
                  <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List At Position ' + $j"/>
                  <set_value name="$wareslist.{$j+1}" exact="$ware" operation="insert"/>
                  <set_value name="$wareslist_prio.{$j+1}" exact="$prio" operation="insert"/>
                  <set_value name="$wareslist_buysell.{$j+1}" exact="'sell'" operation="insert"/>
                  <set_value name="$wareslist_object.{$j+1}" exact="$managed_objects.{$i}" operation="insert"/>
                  <set_value name="$inserted" exact="true"/>
                  <break/>
                </do_if>
              </do_all>
              <do_if value="not $inserted">
                <debug_text filter="general" chance="$debug_detailoutput" text="'Inserting it into the List As first item'"/>
                <set_value name="$wareslist.{1}" exact="$ware" operation="insert"/>
                <set_value name="$wareslist_prio.{1}" exact="$prio" operation="insert"/>
                <set_value name="$wareslist_buysell.{1}" exact="'sell'" operation="insert"/>
                <set_value name="$wareslist_object.{1}" exact="$managed_objects.{$i}" operation="insert"/>
              </do_if>
            </do_else>
          </do_if>
        </do_all>
        <!-- Find out how the required Ammo, Drones and other Stuff is readable here and add it to the Warelist -->
      </do_all>
      
      <do_if value="@this.$debug" comment="Debug Output only here">
        <set_value name="$text" exact="'Objects to Serve:'"/>
        <do_all exact="$managed_objects.count" counter="$i">
          <set_value name="$text" exact="$text + ' ' + $managed_objects.{$i}.name + ' ( ' + $managed_objects.{$i} + ' )'"/>
        </do_all>
        <debug_text filter="general" text="'%1\nSorted Ware List to grab: \n%2\n%3\n%4\n%5'.[$text,$wareslist,$wareslist_prio,$wareslist_buysell,$wareslist_object]"/>
        <remove_value name="$text"/>
      </do_if>
      <!-- we dont need these Values anymore -->
      <remove_value name="$incomingamount"/>
      <remove_value name="$reservedamount"/>
      <remove_value name="$ware"/>
      <remove_value name="$prio"/>
      <remove_value name="$buysell"/>
      <remove_value name="$inserted"/>
      
      <!-- prepare lists for Trades to perform -->
      <create_list name="$buy_home"/>
      <create_list name="$sell_wp"/>
      <create_list name="$sell_away"/>
      <create_list name="$buy_away"/>
      <create_list name="$buy_wp"/>
      <create_list name="$sell_home"/>
      
      
      <!-- ================================ -->
      <!-- find possible initial Trade in order of priority -->
      <do_all exact="$wareslist.count" counter="$i" reverse="false">
        <set_value name="$ware" exact="$wareslist.{$i}"/>
        <set_value name="$trade_object" exact="$wareslist_object.{$i}"/>
        <!-- Aquire Products -->
        <do_if value="$wareslist_buysell.{$i} == 'buy'">
          <!-- If we encounter a mineable Ware and the Ship is considered a Miner send it mining for all Minerals needed -->
          <do_if value="$ware.tags.indexof.{tag.minable} and $miningship">
            <debug_text filter="general" chance="@this.$debug * 100" text="'Checking Ressorce for mining: %1'.[$ware]"/>
            <run_script name="'ut.cac.com.manager.findjob.mine'" result="$success">
              <param name="entity" value="$entity"/>
              <param name="range" value="$range"/>
              <param name="range_w" value="$range_w"/>
              <param name="ware" value="$ware"/>
              <param name="destination_object" value="$trade_object"/>
            </run_script>
            <do_if value="$success">
              <return value="true"/>
            </do_if>
            <do_else>
              <remove_value name="$success"/>
            </do_else>
          </do_if>
          
          <!-- Get Price we want to get this Ware for - 
          In order of Priority:
          => Buy Price defined by Object
          ( => Special Price for special Wares - NYI )
          => Price defined by Offers of Object
          => Price depending on Ware (max for buildmaterial, average for rest) -->
          <set_value name="$price" exact="@$trade_object.buyprice.{$ware}"/>
          <do_if value="not $price">
            <find_buy_offer result="$buyoffer" buyer="$trade_object" wares="$ware"/>
            <do_if value="$buyoffer.available">
              <set_value name="$price" exact="$buyoffer.unitprice"/>
            </do_if>
            <remove_value name="$buyoffer"/>
          </do_if>
          <do_if value="not $price">
            <do_if value="$trade_object.isclass.ship and $trade_object.buildmodule.exists">
              <set_value name="$price" exact="$ware.maxprice"/>
            </do_if>
            <do_else>
              <set_value name="$price" exact="$ware.averageprice"/>
            </do_else>
          </do_if>
          
          <!-- calculate minimum amount to avoid unnecesary transports -->
          <!-- either 10% of Cargo Space, or quarter the Value of the current Ship, whichever is less - Building Materials are always bought regardless of this. -->
          <do_if value="$trade_object.isclass.ship and $trade_object.buildmodule.exists">
            <set_value name="$minamount" exact="1" />
          </do_if>
          <do_else>
            <get_object_value result="$shipvalue" object="$entity.container"/>
            <set_value name="$minamount" exact="[ $entity.container.cargo.{$ware}.free / 10 , ( $shipvalue / 4 ) / $price ].min" />
          </do_else>
          
          <!-- check all Ranges if there is an Offer there -->
          <do_all exact="$range.count" counter="$j" reverse="false">
            <do_if value="$range.{$j} != null" comment="ignore empty slots">
              <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Searching %3 for Sell Offers, Ware: %4, Max Price: %5'.[this.name,this.container.name,$range.{$j}.knownname,$ware.name,$price]"/>
              <do_if value="this.container.istraderestricted">
                <find_sell_offer result="$selloffer" wares="$ware" space="$range.{$j}" knowntoplayer="this.owner == faction.player"><!-- tradepartner="$trade_object" -->
                  <offeramount min="$minamount"/>
                  <price max="$price"/>
                  <match_buyer owner="this.owner">
                    <!--match_distance space="this.zone" value="position.[0m,0m,0m]" max="50km" negate="true"/-->
                  </match_buyer>
                </find_sell_offer>
              </do_if>
              <do_else>
                <find_sell_offer result="$selloffer" wares="$ware" space="$range.{$j}" knowntoplayer="this.owner == faction.player"><!-- tradepartner="$trade_object" -->
                  <offeramount min="$minamount"/>
                  <price max="$price"/>
                  <match_buyer>
                    <!--match_distance space="this.zone" value="position.[0m,0m,0m]" max="50km" negate="true"/-->
                  </match_buyer>
                </find_sell_offer>
              </do_else>
              <wait exact="6s - (this.skill.management)s" comment="to make it look like he is actually comparing Trades wait ( 6 - mangmentskill) seconds per Ware checked (Better Managers are faster)"/>
              <do_if value="$selloffer.available">
                <break/>
              </do_if>
            </do_if>
          </do_all>
          
          <do_if value="$selloffer.available">
            <debug_text filter="general" chance="@this.$debug * 100" text="'found sell offer: %1 ( %2 %3 %4 %5 )'.[$selloffer,$selloffer.owner.knownname,$selloffer.owner.zone.knownname,$selloffer.ware,$selloffer.offeramount]"/>
            <get_ware_reservation ware="$ware" object="$trade_object" result="$incomingamount" type="sell"/>
            <set_value name="$amount" exact="[
$selloffer.offeramount, 
@$trade_object.buildmodule.neededslotresources.{$ware}.count + @$trade_object.cargo.{$ware}.target - $trade_object.cargo.{$ware}.count - $incomingamount, 
$trade_object.cargo.{$ware}.free - $incomingamount, 
$entity.ship.cargo.{$ware}.free, 
(this.money/$selloffer.unitprice)L 
            ].min"/>
            <do_if value="$amount le 0">
              <debug_text filter="general" chance="@this.$debug * 100" text="'Skipping Ware %1 beause $amount is 0 or less, Possible Reasons:\nOfferamount: %2\nTargetamount - Stored Amount - Incoming Amount: %3\nFree Space in Station - Incoming Amount: %4\nFree Space in Ship: %5\nMoney Available for: %6'.[$ware,
$selloffer.offeramount, 
( if this.$ut_cac.$consumables.{$ware}? then (if this.$ut_cac.$consumables.{$ware}.$target? then  this.$ut_cac.$consumables.{$ware}.$target else 0 ) else this.container.cargo.{$ware}.target ) - this.container.cargo.{$ware}.count - $incomingamount, 
this.container.cargo.{$ware}.free - $incomingamount, 
$entity.ship.cargo.{$ware}.free, 
(this.money/$selloffer.unitprice)L 
]"/>
              <continue/>
            </do_if>
            <!-- Expression too long - bugs out.... 
            <debug_text filter="general" chance="@this.$debug * 100" text="
            'trade amount: %1\n=&gt; %2 offer, %3 ( %4 - %5 ) needed(target-is), %6 cargobay, %7 ( %8 / %9 ) money(available/unitprice)'.[ $amount , $selloffer.offeramount ,   ( if this.$ut_cac.$consumables.{$ware}? then (if this.$ut_cac.$consumables.{$ware}.$target? then  this.$ut_cac.$consumables.{$ware}.$target else 0 ) else this.container.cargo.{$ware}.target ) - this.container.cargo.{$ware}.count ), ( if this.$ut_cac.$consumables.{$ware}? then (if this.$ut_cac.$consumables.{$ware}.$target? then  this.$ut_cac.$consumables.{$ware}.$target else 0 ) + this.container.cargo.{$ware}.target ) , this.container.cargo.{$ware}.count , $entity.ship.cargo.{$ware}.free , (this.money/$selloffer.unitprice)L , this.money , $selloffer.unitprice ]"/-->
            <!--clamp_trade_amount result="$amount" seller="this.container" seller="$entity.ship" trade="$buyoffer" amount="$amount/-->
            
            <!-- Add Primary Trades to internal "Shoppinglist" -->
            <find_buy_offer result="$buyoffer" buyer="$trade_object" wares="$ware"/>
            <append_to_list name="$buy_away" exact="table[
$script='ut.cac.com.captain.performsingletraderun',
$displayname={5554103,21010}.[$amount,$ware.name,$selloffer.seller.name,$amount * $selloffer.unitprice],
$trade=$selloffer,
$amount=$amount,
$unitprice=$selloffer.unitprice,
$undock=2,
$wantedmoney=$amount * $selloffer.unitprice,
$interruptable=true]"/>
            <append_to_list name="$sell_home" exact="table[
$script='ut.cac.com.captain.performsingletraderun',
$displayname={5554103,21013}.[$amount,$ware.name,$trade_object.name],
$trade=$buyoffer,
$amount=$amount,
$unitprice=0Cr,
$undock=2,
$wantedmoney=0Cr,
$interruptable=true]"/>
            <do_if value="$range_w.{$j}? and $range_w.{$j}.exists">
              <set_value name="$waypoint" exact="$range_w"/>
            </do_if>
            
            <break/>
          </do_if>
        </do_if>
        <do_elseif value="$wareslist_buysell.{$i} == 'sell'">
          
          <!-- Get Price we want to get this Ware for - 
          In order of Priority:
          => Buy Price defined by Object
          ( => Special Price for special Wares - NYI )
          => Price defined by Offers of Object
          => Price depending on Ware (max for buildmaterial, average for rest) -->
          <set_value name="$price" exact="@$trade_object.buyprice.{$ware}"/>
          <do_if value="not $price">
            <find_buy_offer result="$buyoffer" buyer="$trade_object" wares="$ware"/>
            <do_if value="$buyoffer.available">
              <set_value name="$price" exact="$buyoffer.unitprice"/>
            </do_if>
            <remove_value name="$buyoffer"/>
          </do_if>
          <do_if value="not $price">
            <do_if value="$trade_object.isclass.ship and $trade_object.buildmodule.exists">
              <set_value name="$price" exact="$ware.maxprice"/>
            </do_if>
            <do_else>
              <set_value name="$price" exact="$ware.averageprice"/>
            </do_else>
          </do_if>
          
          <!-- Get Price we want to sell this Ware for -
          In order of Priority: 
          => Sell Price defined by Object,
          => Sell Price defined by Trade Off on Object,
          => Average Price of Ware -->
          <set_value name="$price" exact="@$trade_object.sellprice.{$ware}"/>
          <do_if value="not $price">
            <find_sell_offer result="$selloffer" seller="$trade_object" wares="$ware"/>
            <do_if value="$selloffer.available">
              <set_value name="$price" exact="$selloffer.unitprice"/>
            </do_if>
            <do_else>
              <set_value name="$price" exact="$ware.averageprice"/>
            </do_else>
            <remove_value name="$selloffer"/>
          </do_if>
          
          <!-- calculate minimum amount to avoid unnecesary transports -->
          <!-- either 10% of Cargo Space, or quarter the Value of the current Ship, whichever is less -->
          <get_object_value result="$shipvalue" object="$entity.container"/>
          <set_value name="$minamount" exact="[ $entity.container.cargo.{$ware}.free / 10 , ( $shipvalue / 4 ) / $price ].min" />
          
          
          <!-- check all Ranges if there is an Offer there -->
          <do_all exact="$range.count" counter="$j" reverse="false">
            <do_if value="$range.{$j} != null" comment="ignore empty slots">
              <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Searching %3 for Buy Offers, Ware: %4, Min Price: %5'.[this.name,this.container.name,$range.{$j}.knownname,$ware.name,$price]"/>
              <do_if value="this.container.istraderestricted">
                <find_buy_offer result="$buyoffer" tradepartner="this.container" wares="$ware" space="$range.{$j}" knowntoplayer="this.owner == faction.player">
                  <offeramount min="$minamount"/>
                  <price min="$price"/>
                  <match_seller owner="this.owner">
                    <!--match_distance space="this.zone" value="position.[0m,0m,0m]" max="50km" negate="true"/-->
                  </match_seller>
                </find_buy_offer>
              </do_if>
              <do_else>
                <find_buy_offer result="$buyoffer" tradepartner="this.container" wares="$ware" space="$range.{$j}" knowntoplayer="this.owner == faction.player">
                  <offeramount min="$minamount"/>
                  <price min="$price"/>
                  <match_seller>
                    <!--match_distance space="this.zone" value="position.[0m,0m,0m]" max="50km" negate="true"/-->
                  </match_seller>
                </find_buy_offer>
              </do_else>
              <wait exact="6s - (this.skill.management)s" comment="to make it look like he is actually comparing Trades wait ( 6 - mangmentskill) seconds per Ware checked (Better Managers are faster)"/>
              <do_if value="$buyoffer.available">
                <break/>
              </do_if>
            </do_if>
          </do_all>
          
          <do_if value="$buyoffer.available">
            <debug_text filter="general" chance="@this.$debug * 100" text="'found buy offer: %1 ( %2 %3 %4 %5 )'.[$buyoffer,$buyoffer.owner.knownname,$buyoffer.owner.zone.knownname,$buyoffer.ware,$buyoffer.offeramount]"/>
            <get_ware_reservation ware="$ware" object="this.container" result="$reservedamount" type="buy"/>
            <set_value name="$amount" exact="[ 
                $buyoffer.offeramount, 
                this.container.cargo.{$ware}.count - $reservedamount, 
                $entity.ship.cargo.{$ware}.free 
            ].min"/>
            <do_if value="$amount == 0">
              <debug_text filter="general" chance="@this.$debug * 100" text="'possible amount is 0 - continuing with next ware'"/>
              <continue/>
            </do_if>
            
            <!-- Add Primary Trades to internal "Shoppinglist" -->
            <find_sell_offer result="$selloffer" buyer="$trade_object" wares="$ware"/>
            <append_to_list name="$buy_home" exact="table[
$script='ut.cac.com.captain.performsingletraderun',
$displayname={5554103,21012}.[$amount,$ware.name,$selloffer.seller.name],
$trade=$selloffer,
$amount=$amount,
$unitprice=0Cr,
$undock=2,
$wantedmoney=0Cr,
$interruptable=true]"/>
            <append_to_list name="$sell_away" exact="table[
$script='ut.cac.com.captain.performsingletraderun',
$displayname={5554103,21013}.[$amount,$ware.name,$trade_object.name,$amount * $buyoffer.unitprice],
$trade=$buyoffer,
$amount=$amount,
$unitprice=$buyoffer.unitprice,
$undock=2,
$wantedmoney=$amount * $buyoffer.unitprice,
$interruptable=true]"/>
            <do_if value="$range_w.{$j}? and $range_w.{$j}.exists">
              <set_value name="$waypoint" exact="$range_w"/>
            </do_if>
            
            <break/>
          </do_if>
        </do_elseif>
      </do_all>
      
      <!-- Get some Additional Trades to perform on the way here -->
      
      
      <!-- Last Step: sort Trades in a sensible Manner, give money and send the Ship Shopping -->
      <create_list name="$new_orders"/>
      <set_value name="$required_money" exact="0Cr"/>
      <do_while value="$buy_home.count">
        <append_to_list name="$new_orders" exact="$buy_home.{1}"/>
        <set_value name="$trade_object" exact="$buy_home.{1}.$trade.owner"/>
        <remove_value name="$buy_home.{1}"/>
        <do_all exact="$buy_home.count" counter="$i" reverse="true">
          <do_if value="$buy_home.{$i}.$trade.owner == $trade_object">
            <append_to_list name="$new_orders" exact="$buy_home.{$i}"/>
            <remove_value name="$buy_home.{$i}"/>
          </do_if>
        </do_all>
      </do_while>
      
      <do_if value="$waypoint?">
        <do_if value="not $sell_wp.count">
          <append_to_list name="$new_orders" exact="table[$script='ut.cac.move.generic',$displayname={5554103,21003}.[$waypoint.name],$destination=$waypoint,$endintargetspace=true]"/>
        </do_if>
        <do_while value="$sell_wp.count">
          <append_to_list name="$new_orders" exact="$sell_wp.{1}"/>
          <set_value name="$trade_object" exact="$sell_wp.{1}.$trade.owner"/>
          <remove_value name="$sell_wp.{1}"/>
          <do_all exact="$sell_wp.count" counter="$i" reverse="true">
            <do_if value="$sell_wp.{$i}.$trade.owner == $trade_object">
              <append_to_list name="$new_orders" exact="$sell_wp.{$i}"/>
              <set_value name="$required_money" operation="subtract" exact="$sell_wp.{$i}.$trade.$unitprice * $sell_wp.{$i}.$amount"/>
              <remove_value name="$sell_wp.{$i}"/>
            </do_if>
          </do_all>
        </do_while>
      </do_if>
      
      <do_while value="$sell_away.count">
        <append_to_list name="$new_orders" exact="$sell_away.{1}"/>
        <set_value name="$trade_object" exact="$sell_away.{1}.$trade.owner"/>
        <remove_value name="$sell_away.{1}"/>
        <do_all exact="$sell_away.count" counter="$i" reverse="true">
          <do_if value="$sell_away.{$i}.$trade.owner == $trade_object">
            <append_to_list name="$new_orders" exact="$sell_away.{$i}"/>
            <set_value name="$required_money" operation="subtract" exact="$sell_away.{$i}.$trade.$unitprice * $sell_away.{$i}.$amount"/>
            <remove_value name="$sell_away.{$i}"/>
          </do_if>
        </do_all>
      </do_while>
      
      <!-- this one is slightly diffrent because the Ship should remain docked if it has sheduled buy orders for the station is was selling previously to -->
      <do_while value="$buy_away.count">
        <do_all exact="$buy_away.count" counter="$i" reverse="true">
          <do_if value="$buy_away.{$i}.$trade.owner == $trade_object">
            <append_to_list name="$new_orders" exact="$buy_away.{$i}"/>
            <remove_value name="$buy_away.{$i}"/>
          </do_if>
        </do_all>
        <do_if value="$buy_away.count">
          <append_to_list name="$new_orders" exact="$buy_away.{1}"/>
          <set_value name="$trade_object" exact="$buy_away.{1}.$trade.owner"/>
          <set_value name="$required_money" operation="add" exact="$buy_away.{$i}.$trade.$unitprice * $buy_away.{$i}.$amount"/>
          <remove_value name="$buy_away.{1}"/>
        </do_if>
      </do_while>
      
      <do_if value="$waypoint?">
        <do_if value="not $buy_wp.count">
          <append_to_list name="$new_orders" exact="table[$script='ut.cac.move.generic',$displayname={5554103,21003}.[$waypoint.name],$destination=$waypoint,$endintargetspace=true]"/>
        </do_if>
        <do_while value="$buy_wp.count">
          <append_to_list name="$new_orders" exact="$buy_wp.{1}"/>
          <set_value name="$trade_object" exact="$buy_wp.{1}.$trade.owner"/>
          <remove_value name="$buy_wp.{1}"/>
          <do_all exact="$buy_wp.count" counter="$i" reverse="true">
            <do_if value="$buy_wp.{$i}.$trade.owner == $trade_object">
              <append_to_list name="$new_orders" exact="$buy_wp.{$i}"/>
              <set_value name="$required_money" operation="add" exact="$buy_wp.{$i}.$trade.$unitprice * $buy_wp.{$i}.$amount"/>
              <remove_value name="$buy_wp.{$i}"/>
            </do_if>
          </do_all>
        </do_while>
      </do_if>
      
      <do_while value="$sell_home.count">
        <append_to_list name="$new_orders" exact="$sell_home.{1}"/>
        <set_value name="$trade_object" exact="$sell_home.{1}.$trade.owner"/>
        <remove_value name="$sell_home.{1}"/>
        <do_all exact="$sell_home.count" counter="$i" reverse="true">
          <do_if value="$sell_home.{$i}.$trade.owner == $trade_object">
            <append_to_list name="$new_orders" exact="$sell_home.{$i}"/>
            <remove_value name="$sell_home.{$i}"/>
          </do_if>
        </do_all>
      </do_while>
      
      <do_if value="$new_orders.count">
        <!-- give Captain necesary Money -->
        <do_if value="not $entity.hasownaccount">
          <set_actor_account actor="$entity"/>
        </do_if>
        <do_if value="$entity_money lt $required_money">
          <transfer_money from="this" to="$entity" amount="$required_money - $entity.money"/>
        </do_if>
        <!-- if entity has far too much money take the unneeded amount back -->
        <do_elseif value="$entity_money lt $required_money + 100000Cr">
          <transfer_money from="$entity" to="this" amount="$entity.money - $required_money"/>
        </do_elseif>
        <signal_objects object="$entity" param="'new order'" param2="$new_orders"/>
        <signal_objects object="this" param="'new order'" param2="table[$script='ut.cac.com.manager.findjob.assign.escort',$displayname={5554103,25002}.[$entity.ship.name],$escortee=$entity.ship,$destination=this.zone,$value=$amount * $ware.maxprice]"/>
        <return value="true"/>
      </do_if>
      <do_else>
        <!-- couldnt find fitting Trades to execute - returning failure -->
        <return value="false"/>
      </do_else>
    </actions>
  </attention>
</aiscript>
