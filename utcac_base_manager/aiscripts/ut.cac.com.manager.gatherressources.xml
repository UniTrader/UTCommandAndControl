<?xml version="1.0" encoding="UTF-8"?>
<aiscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="ut.cac.com.manager.gatherressources" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd" version="1">
  <!--
  
  Manager-Based Gas Mining Script by UniTrader
  
  This Script will yield to any other Script which wants to perform Actions any time, and can resume safely from the Data stored in the $params Table


-->
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
  </params>
  <init>
  </init>
  <interrupts>
    <handler ref="ut_cac_yieldonneworder"/>
  </interrupts>
  <attention min="unknown">
    <actions>
      <do_if value="$params">
        <do_if value="$params.$wareslist?">
          <set_value name="$wareslist" exact="$params.$wareslist"/>
        </do_if>
        <do_if value="$params.$next_call?">
          <set_value name="$next_call" exact="$params.$next_call"/>
        </do_if>
      </do_if>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 manager Gather Script called with: \n%3'.[this.name,this.container.name,$params]"/>
      
      <!-- first check if we already started gathering Ressources and Jump forward to wait/gather part (in case this Script Yielded) -->
      <do_if value="$params.$gatherware?">
        <resume label="launch drones"/>
      </do_if>
      
      <do_if value="$wareslist.count == 0">
        <return/>
      </do_if>
      
      <!-- first sort $wareslist by its priority and filter out Minerals for now (to be implemented later) -->
      <create_list name="$wareslist_prio" exact="$wareslist.count"/>
      <do_all exact="$wareslist.count" counter="$i" reverse="true">
        <do_if value="$wareslist.{$i}.tags.indexof.{tag.liquid}">
          <get_ware_reservation ware="$wareslist.{$i}" object="this.container" result="$incomingamount" type="sell"/>
          <set_value name="$wareslist_prio.{$i}" exact="1 - ( ( this.container.cargo.{$wareslist.{$i}}.count + $incomingamount )f  / ( this.container.cargo.{$wareslist.{$i}}.target )f )"/>
          <!-- filter out Wares we dont need (very low demand) and Wares which can not be mined here -->
          <do_if value="$wareslist_prio.{$i} lt 0.003 or not this.zone.yield.indexof.{$wareslist.{$i}}">
            <remove_value name="$wareslist.{$i}"/>
            <remove_value name="$wareslist_prio.{$i}"/>
          </do_if>
        </do_if>
        <do_else>
          <remove_value name="$wareslist.{$i}"/>
          <remove_value name="$wareslist_prio.{$i}"/>
        </do_else>
      </do_all>
      <do_all exact="$wareslist.count" counter="$imax">
        <do_all exact="$imax - 1" counter="$i">
          <do_if value="$wareslist_prio.{$i} lt $wareslist_prio.{$i+1}">
            <set_value name="$tmp_ware" exact="$wareslist.{$i}"/>
            <set_value name="$tmp_prio" exact="$wareslist_prio.{$i}"/>
            <set_value name="$wareslist.{$i}" exact="$wareslist.{$i+1}"/>
            <set_value name="$wareslist_prio.{$i}" exact="$wareslist_prio.{$i+1}"/>
            <set_value name="$wareslist.{$i+1}" exact="$tmp_ware"/>
            <set_value name="$wareslist_prio.{$i+1}" exact="$tmp_prio"/>
          </do_if>
        </do_all>
      </do_all>
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Mineable List sorted:\n%3\n%4'.[this.name,this.container.name,$wareslist,$wareslist_prio]"/>
      
      <!-- nothing to mine - aborting -->
      <do_if value="$wareslist.count == 0">
        <!--do_if value="$params.$gascollectormk1quota?">
          <stop_mass_traffic_quota quota="$params.$gascollectormk1quota"/>
          <remove_value name="$params.$gascollectormk1quota"/>
        </do_if>
        <do_if value="$params.$gascollectormk2quota?">
          <stop_mass_traffic_quota quota="$params.$gascollectormk2quota"/>
          <remove_value name="$params.$gascollectormk2quota"/>
        </do_if-->
        <return/>
      </do_if>
      
      <label name="start mining"/>
      <!-- Starting Mining with the most important Ressource we can actively Mine -->
      <set_command command="command.freemining"/>
      <do_if value="this.$ut_cac?">
        <set_value name="this.$ut_cac.$isactive"/>
      </do_if>
      <get_resource_gatherrate name="$gatherrate" refobject="this.container" zone="this.zone" ware="$wareslist.{1}" />
      <do_if value="$gatherrate" max="0">
        <debug_text filter="error" text="'%1 %2 Gatherrate is 0 (should not happen) - aborting'.[this.name,this.container.name]"/>
        <return/>
      </do_if>
      <set_value name="$gatherrate" exact="$gatherrate / 3" comment="Station Gas Mining is only 30% as effective as it could be"/>
      <add_ware_reservation object="this.container" entity="this" ware="$wareslist.{1}" amount="$gatherrate * $next_call" type="sell"/>
      <!-- save values to $params to add Ressources on the next call -->
      <set_value name="$params.$gatherstart" exact="player.age" />
      <set_value name="$params.$gatherrate" exact="$gatherrate" />
      <set_value name="$params.$gatherware" exact="$wareslist.{1}" />
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Gathering started'.[this.name,this.container.name]"/>
      <!-- launch drones to collect gas - only for show -->
      <!-- Better method, but owner faction not set-able, so using old method.. -->
      <!--do_if value="not $params.$gascollectormk1quota?">
        <add_mass_traffic_quota quota="$params.$gascollectormk1quota" zone="this.zone" start="this.container" end="this.container" macro="macro.units_size_drone_liquid_collector_mk1_macro" amount="this.container.units.{unitcategory.gascollector}.mk.{1}.count" />
      </do_if>
      <do_if value="not $params.$gascollectormk2quota?">
        <add_mass_traffic_quota quota="$params.$gascollectormk2quota" zone="this.zone" start="this.container" end="this.container" macro="macro.units_size_drone_liquid_collector_mk2_macro" amount="this.container.units.{unitcategory.gascollector}.mk.{2}.count" />
      </do_if-->
      <label name="launch drones"/>
      <do_if value="this.container.attention ge attention.visible">
        <debug_text filter="general" chance="@this.$debug * 100" text="'launching Drones'"/>
        <find_object_component groupname="$dronelaunchbays" object="this.container" multiple="true" class="class.dronelaunchpad" checkoperational="true"/>
        <create_group groupname="$params.$drones"/>
        <!-- launching about half the Drones available so we can also laumch some on the next cycle in case they didnt return yet -->
        <do_while value="($params.$drones.count lt this.container.units.{unitcategory.gascollector}.count / 3 or $params.$drones.count lt 15 ) and this.container.availableunits.{unitcategory.gascollector}.count">
          <do_all exact="$dronelaunchbays.count" counter="$i">
            <launch_drone groupname="$params.$drones" object="$dronelaunchbays.{$i}" group="unitcategory.gascollector" exact="1"/>
          </do_all>
        </do_while>
        <debug_text filter="general" chance="@this.$debug * 100" text="'Launched %1 Drones from %2 launch bays'.[$params.$drones.count,$dronelaunchbays.count]"/>
        <do_all exact="$params.$drones.count" counter="$i">
          <do_if value="$params.$drones.{$i}.isoperational">
            <!-- ToDo: needs a better Script -->
            <start_script name="'ut.cac.com.drone.gatherressources'" object="$params.$drones.{$i}.pilot">
              <param name="homebase" value="this.container"/>
              <param name="ware" value="$params.$gatherware"/>
            </start_script>
          </do_if>
        </do_all>
      </do_if>
      
      <wait exact="$params.$gatherstart + 5min - player.age">
        <interrupt>
          <conditions>
            <event_object_changed_attention object="this.ship" min="visible"/>
          </conditions>
          <actions>
            <resume label="launch drones"/>
          </actions>
        </interrupt>
      </wait>
      
      <label name="end mining"/>
      <remove_ware_reservation object="this.container" entity="this" ware="$params.$gatherware" type="sell"/>
      <get_resource_gatherrate name="$gatherrate" refobject="this.container" zone="this.zone" ware="$params.$gatherware" />
      <set_value name="$gatherrate" exact="$gatherrate / 3" comment="Station Gas Mining is only 30% as effective as it could be"/>
      <set_value name="$gatherrate" exact="[$gatherrate,$params.$gatherrate].min"/>
      <set_value name="$gathertime" exact="player.age - $params.$gatherstart" />
      <set_value name="$gathered" exact="$gathertime * $gatherrate" />
      <get_ware_reservation ware="$params.$gatherware" object="this.container" result="$incomingamount" type="sell"/>
      <set_value name="$gathered" exact=" [ this.container.cargo.{$params.$gatherware}.target - this.container.cargo.{$params.$gatherware}.count - $incomingamount , $gathered ].min"/>
      <do_if value="$gathered gt 0">
        <deplete_yield zone="this.zone" container="this.container" ware="$params.$gatherware" amount="$gathered" />
      </do_if>
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Gathered from previous run:\n%3 units of %4 in %5 seconds (%6 units/s)'.[this.name,this.container.name,$gathered, $params.$gatherware, $gathertime, $gatherrate]"/>
      <remove_value name="$params.$gatherstart"/>
      <remove_value name="$params.$gatherware"/>
      <remove_value name="$params.$gatherrate"/>
      
      <label name="finish"/>
    </actions>
  </attention>
</aiscript>
