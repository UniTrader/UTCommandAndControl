<?xml version="1.0" encoding="UTF-8" ?>
<aiscript name="ut.cac.move.follow.capital.step" version="30" priority="10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
  <!--

 rewritten from scratch by UniTrader
  
 Routine for Travelling InZone from one pos to another (Ship is assumed to be in Formation position)

  -->
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
    <param name="leader" default="null" comment="the formation leader which should be followed"/>
    <param name="position" default="null" comment="Position in the Zone where the Leader flies to - may change on start Signal depending on Safepos Size"/>
    <param name="rotation" default="null" comment="Rotation of the Leader when arriving at target pos - may change on start Signal depending on Safepos Size"/>
    <param name="leader_preparegroup" default="null" comment="the group of Ships the Leader waits for when Arrived"/>
    
  </params>
  <interrupts>
  </interrupts>
  <attention min="unknown">
    <actions>
      <!-- first turn params param into the real params -->
      <do_if value="$params">
        <do_if value="$params.$destination?">
          <set_value name="$destination" exact="$params.$destination"/>
        </do_if>
        <do_if value="$params.$leader?">
          <set_value name="$leader" exact="$params.$leader"/>
        </do_if>
        <do_if value="$params.$position?">
          <set_value name="$position" exact="$params.$position"/>
        </do_if>
        <do_if value="$params.$leader_preparegroup?">
          <set_value name="$leader_preparegroup" exact="$params.$leader_preparegroup"/>
        </do_if>
      </do_if>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Script started with Params:\n$destination: %4 , $position: %5 , $leader: %6 , $leader_preparegroup: %7'.[player.age,this.name,this.container.name,$destination.knownname,$position,$leader,$leader_preparegroup]"/>
      
      <!-- =========== -->
      <!-- Validate Input -->
      <!-- =========== -->
      <do_if value="not $leader">
        <debug_text filter="error" text="'%1 %2 %3 No Leader provided - Aborting'.[ player.age,this.name,this.container.name,$leader_preparegroup]" />
        <return/>
      </do_if>
      <do_if value="not $leader_preparegroup">
        <debug_text filter="error" text="'%1 %2 %3 LNo Prepare Group provided - aborting'.[ player.age,this.name,this.container.name, $leader]" />
        <return/>
      </do_if>
      <do_if value="$leader.exists and $leader.zone != this.zone">
        <debug_text filter="error" text="'%1 %2 %3 Leader is in diffrent Zone  than we are. Aborting! Leader zone: %4 Our Zone: %5'.[ player.age,this.name,this.container.name,$leader.zone.knownname,this.zone.kownname]" />
        <return/>
      </do_if>
      <do_if value="not $position">
        <debug_text filter="error" text="'%1 %2 %3 No Target Position provided - Aborting'.[ player.age,this.name,this.container.name,$leader_preparegroup]" />
        <return/>
      </do_if>
      
      <!-- Add to Prep Group and wait for leader to determine final Target Pos -->
      <add_to_group groupname="$leader_preparegroup" object="this.ship"/>
      <wait max="1min">
        <interrupt>
          <conditions>
            <event_object_signalled object="$leader" param="'travel normal start'"/>
          </conditions>
          <actions>
            <set_value name="$position" exact="event.param2.{1}" comment="update Target Pos"/>
          </actions>
        </interrupt>
      </wait>
      
      
      <!-- =================== -->
      <!-- Figure out final Params -->
      <!-- =================== -->
      <!-- Get our Position in the Leaders Coordinate System and use same relative pos for target position -->
      <!--create_position name="$relativepos" object="this.ship" space="$leader"/-->
      <!-- this position can assumed to be safe because the leader should have passed a enerous safepos -->
      <transform_position name="$targetpos" refposition="$position" refrotation="$rotation">
        <position object="this.ship" space="$leader"/>
      </transform_position>
      <set_value name="$targetrot" exact="$rotation"/>
      
      <!-- ================= -->
      <!-- Execute Movements -->
      <!-- ================= -->
      <set_command_action commandaction="commandaction.flyingto" param="$destination"/>
      <do_if value="this.$ut_cac?"><set_value name="this.$ut_cac.$isactive"/></do_if>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Moving to Follow Target Position'.[player.age,this.name,this.container.name]"/>
      <move_to object="this.ship" destination="this.zone" forceposition="false" forcerotation="true" finishonapproach="true" abortpath="false">
        <position value="$targetpos" />
        <rotation value="$targetrot" />
        <interrupt>
          <conditions>
            <event_object_approaching_waypoint object="this.ship" lastwaypoint="true"/>
          </conditions>
        </interrupt>
      </move_to>
      
      <!-- Arrived at Target Pos - remove from prep Group to unblock leader and exit -->
      <remove_from_group group="$leader_preparegroup" object="this.ship"/>
      
    </actions>
  </attention>
  <on_abort>
    <stop_moving object="this.ship"/>
    <do_if value="$leader_preparegroup.indexof.{this.ship}">
      <remove_from_group group="$leader_preparegroup" object="this.ship"/>
    </do_if>
    <signal_objects object="this.ship" param="'travel aborted'"/>
  </on_abort>
</aiscript>
