<?xml version="1.0" encoding="UTF-8"?>
<aiscript name="ut.cac.com.captain.performsingletraderun" version="30" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
    <param name="trade" default="null" comment="Execute a specific Trade and ignore the Trade List for this NOTE: BROKEN, NEEDS FIXING!!! (also does not refresh Reservations from Trade List, call once before with 'refreshreservations' = true to do this)"/>
    <param name="amount" default="null" comment="Specific Amount to Trade in case a specific Trade is ordered"/>
    <param name="refreshreservations" default="false" comment="Refresh Ware Revervations from Trade list ONLY (does not execute any Trade)"/>
    <param name="undock" default="2" comment="undock when finished? (true -> yes, false -> no, 2 -> autodetect)"/>
    <param name="command" default="command.trade" comment="command to display when executing this Script ( command.freetrade or command.trade would make sense, depending on context)"/>
    <param name="usecustomtrade" default="false" comment="always perform a custom trade"/>
  </params>
  <init>
    <!-- first turn $params param into the real params -->
    <do_if value="$params.$trade?">
      <set_value name="$trade" exact="$params.$trade"/>
    </do_if>
    <do_if value="$params.$amount?">
      <set_value name="$amount" exact="$params.$amount"/>
    </do_if>
    <do_if value="$params.$refreshreservations?">
      <set_value name="$refreshreservations" exact="$params.$refreshreservations"/>
    </do_if>
    <do_if value="$params.$undock?">
      <set_value name="$undock" exact="$params.$undock"/>
    </do_if>
    <do_if value="$params.$command?">
      <set_value name="$command" exact="$params.$command"/>
    </do_if>
    <do_if value="$params.$usecustomtrade?">
      <set_value name="$usecustomtrade" exact="$params.$usecustomtrade"/>
    </do_if>
  </init>
  <interrupts>
    <handler ref="ut_cac_lib_interrupt_attacked"/>
  </interrupts>
  <attention min="unknown">
    <actions>
      
      <!-- first refresh the Reservations -->
      <get_trade_from_shoppinglist result="$trades" object="this.ship" multiple="true"/>
      <do_if value="$trades.count">
        <do_all exact="$trades.count" counter="$i" >
          <!-- reserve Trades - 1 hour is assumed per Trade, so duration for first is 1h, for second trade is 2h, third trade is 3h etc. -->
          <!-- ToDo: should the entity maybe be the Manager? need to know for using the proper Actor Account -->
          <!-- Note: trade Orders for the same ware with the same Station are not supported - always just grab the amount you can get in one run. -->
          <do_if value="$trades.{$i}.seller.exists">
            <!-- is this really correct? its the same as in buyer, even the amount, so i wonder how the game differs between sell and buy? -->
            <add_ware_reservation object="$trades.{$i}.seller" result="$reserved" ware="$trades.{$i}.ware" entity="this" amount="$trades.{$i}.amount" replace="true" duration="$i * 1h" mission="$trades.{$i}.ismission" virtual="$trades.{$i}.unbundle" type="buy"/>
          </do_if>
          <do_elseif value="$trades.{$i}.buyer.exists">
            <do_if value="not $trades.{$i}.unbundle">
              <add_ware_reservation object="$trades.{$i}.buyer" result="$reserved" ware="$trades.{$i}.ware" entity="this" amount="$trades.{$i}.amount" replace="true" duration="$i * 1h" mission="$trades.{$i}.ismission" type="sell"/>
            </do_if>
           </do_elseif>
          <do_else>
            <debug_text filter="error" text="'%1 %2 Ordered Queue Trade %3 (ware: %4 amount: %5 unitprice: %6 ) has neither a Seller nor a Buyer and is therfore invalid - removing'.[this.name,this.container.name,$trades.{$i},$trades.{$i}.ware,$trades.{$i}.amount,$trades.{$i}.unitprice]"/>
            <remove_trade_order object="this.ship" trade="$trades.{$i}"/>
          </do_else>
        </do_all>
      </do_if>
      <do_if value="$refreshreservations == true">
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Refreshed Reservations, thats all'.[this.name,this.container.name]"/>
        <return/>
      </do_if>
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Refreshed Reservations:\n%3'.[this.name,this.container.name,$trades]"/>
      <remove_value name="$refreshreservations"/>
      <remove_value name="$trades"/>
      
      <label name="start"/>
      
      <!-- Now get the Trade we want to do - either the first in the Shoppinglist or the one specifically given by the Caller - in the latter case reserve it, too -->
      <do_if value="not $trade">
        <get_trade_from_shoppinglist result="$trade" object="this.ship"/>
        <do_if value="not $trade.exists">
          <debug_text filter="error" text="'%1 %2 No Trade to do given - exit-ing'.[this.name,this.container.name]"/>
          <return/>
        </do_if>
        <do_if value="$amount == null">
          <set_value name="$amount" exact="$trade.amount"/>
        </do_if>
      </do_if>
      <do_else>
        <set_value name="$non_shoppinglist_trade"/>
        <do_if value="$trade.seller.exists">
          <add_ware_reservation object="$trade.owner" result="$reserved" ware="$trade.ware" entity="this" amount="$amount" replace="true" duration="1h" mission="$trade.ismission" virtual="$trade.unbundle" type="buy"/>
        </do_if>
        <do_elseif value="$trade.buyer.exists">
          <add_ware_reservation object="$trade.owner" result="$reserved" ware="$trade.ware" entity="this" amount="$amount" replace="true" duration="1h" mission="$trade.ismission" type="sell"/>
        </do_elseif>
        <do_else>
          <debug_text filter="error" text="'%1 %2 Ordered Trade %3 (ware: %4 amount: %5 unitprice: %6 ) has neither a Seller nor a Buyer and is therfore invalid - removing'.[this.name,this.container.name,$trade,$trade.ware,$trade.amount,$trade.unitprice]"/>
          <return/>
        </do_else>
      </do_else>
      
      <set_command command="$command" param="$trade.owner"/>
      <set_command_action commandaction="commandaction.calculating"/>
      <do_if value="this.$ut_cac?">
        <set_value name="this.$ut_cac.$isactive"/>
      </do_if>
      
      <!--in case something went wrong while docking - jumps back from line 207 or 218 -->
      <label name="retry"/>
      
      <!-- now do checks and get all relevant parameters for the next or directly ordered trade -->
      <do_if value="not $trade.exists">
        <!-- trade invalid - remove and abort -->
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Order not valid: %3'.[this.name,this.container.name,$trade]"/>
        <resume label="abort trade"/>
      </do_if>
      <do_if value="$trade.iswareexchange">
        <!-- Ware exchange not supported yet -->
        <debug_text filter="error" chance="@this.$debug * 100" text="'%1 %2 Ware exchange not supported yet - aborting'.[this.name,this.container.name]"/>
        <resume label="abort trade"/>
        <set_value name="$tradepartner" exact="$trade.exchangepartner.{this.ship}" />
      </do_if>
      <do_elseif value="$trade.seller.isoperational">
        <set_value name="$tradepartner" exact="$trade.seller" />
      </do_elseif>
      <do_elseif value="$trade.buyer.isoperational">
        <set_value name="$tradepartner" exact="$trade.buyer" />
        <!-- confirm that we have enough goods and lower Amount if needed -->
        <do_if value="this.ship.cargo.{$trade.ware}.count lt $amount">
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Not enough Wares to Sell - Lowering Amount from %3 to %4'.[this.name,this.container.name,$amount,this.ship.cargo.{$trade.ware}.count]"/>
          <set_value name="$amount" exact="this.ship.cargo.{$trade.ware}.count"/>
          <do_if value="not $non_shoppinglist_trade?">
            <update_trade trade="$trade" amount="$amount"/>
          </do_if>
        </do_if>
      </do_elseif>
      <do_else>
        <!-- no valid Trade Partner - remove shoppinglist item, and check list again -->
        <debug_text filter="error" text="'%1 %2 No valid Trade Partner - aborting'.[this.name,this.container.name]"/>
        <resume label="abort trade"/>
      </do_else>
      
      <!-- trading 0 amount - remove and abort -->
      <do_if value="$amount == 0">
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Order has Zero amount - aborting: %3'.[this.name,this.container.name,$trade]"/>
        <resume label="abort trade"/>
      </do_if>
      
      <!-- Ware Exchange cases -->
      <!-- ToDo: implement these - will error to debuglog for now and abort -->
      <do_if value="$trade.iswareexchange and $tradepartner.isclass.ship">
        <debug_text filter="error" chance="@this.$debug * 100" text="'%1 %2 Ware exchange not supported yet - aborting'.[this.name,this.container.name]"/>
        <resume label="abort trade"/>
      </do_if>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Parameters:\nthis.money: %3 trade.price: %4 $amount: %5 $trade.ware: %6'.[this.name,this.container.name,this.money,$trade.price,$amount,$trade.ware]"/>
      
      <do_if value="@this.ship.parkedat.container == $tradepartner">
        <!-- skip the movement step if we are already there -->
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Already docked at right station - Skipping movement'.[this.name,this.container.name]"/>
        <resume label="execute trade" comment="line 185" />
      </do_if>
      
      <!-- move to correct zone -->
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Move to correct Zone:\n$tradepartner.zone= %3'.[this.name,this.container.name,$tradepartner.zone.knownname]"/>
      <do_if value="this.zone != $tradepartner.zone">
        <set_command_action commandaction="commandaction.flyingto" param="$tradepartner.zone"/>
        <do_if value="this.$ut_cac?">
          <set_value name="this.$ut_cac.$isactive"/>
        </do_if>
        <run_script name="'ut.cac.move.generic'">
          <param name="destination" value="$tradepartner" />
          <param name="endintargetspace" value="true" />
          <param name="exitonneworder" value="false" comment="This Script should interrupt, not the called Script!!!"/>
        </run_script>
      </do_if>
      
      <!-- dock/park at target -->
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Dock at Trade Station:\n$tradepartner.name=%3'.[this.name,this.container.name,$tradepartner.knownname]"/>
      <set_command_action commandaction="commandaction.docking"/>
      <do_if value="this.$ut_cac?">
        <set_value name="this.$ut_cac.$isactive"/>
      </do_if>
      <do_if value="this.ship.isclass.ship_xl or this.ship.isclass.ship_l">
        <set_value name="$offer" exact="null" />
        <!-- ToDo: Ware Exchange Case: Active Partner -->
        <do_if value="@$trade.seller.isoperational">
          <do_if value="$trade.ismission">
            <find_sell_offer result="$offer" seller="$tradepartner" wares="$trade.ware" excludemissions="false" tradepartner="this.ship" />
          </do_if>
          <do_else>
            <find_sell_offer result="$offer" seller="$tradepartner" wares="$trade.ware" tradepartner="this.ship" />
          </do_else>
        </do_if>
        <do_elseif value="@$trade.buyer.isoperational">
          <find_buy_offer result="$offer" buyer="$tradepartner" wares="$trade.ware" tradepartner="this.ship" />
        </do_elseif>
        <do_else>
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Tradepartner destroyed - aborting'.[this.name,this.container.name]"/>
          <resume label="abort trade"/>
        </do_else>
        <do_if value="not $offer.available">
          <do_if value="$trade.ismission">
            <set_value name="$offer" exact="null" />
          </do_if>
          <do_else>
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 no Tradeoffer to park to found - docking anywhwere'.[this.name,this.container.name]"/>
            <set_value name="$offer" exact="null" />
          </do_else>
        </do_if>
        <set_value name="$params.$attackreaction" exact="0" comment="deactivate flee reaction while parked/parking at Station"/>
        <run_script name="'ut.cac.move.dock'" result="$parkresult">
          <param name="destination" value="$tradepartner" />
          <param name="tradeoffer" value="$offer" />
        </run_script>
        <do_if value="this.$reevaluate_parking?">
          <remove_value name="this.$reevaluate_parking" />
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 something went wrong with parking - aborting'.[this.name,this.container.name]"/>
          <return/>
        </do_if>
        <do_elseif value="not $parkresult">
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Not parked? retrying'.[this.name,this.container.name]"/>
          <resume label="retry" comment="line 89" />
        </do_elseif>
      </do_if>
      <do_else>
        <run_script name="'move.dockat'" result="$dockresult">
          <param name="destination" value="$tradepartner" />
        </run_script>
        <do_if value="not $dockresult">
          <!--remove_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" mission="$trade.ismission"/-->
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Not docked? retrying after short delay'.[this.name,this.container.name]"/>
          <wait min="30s" max="100s" />
          <resume label="retry" comment="line 89" />
        </do_if>
        <!-- code snippet for docking taken from vanilla, but why reserving again? -->
        <!--do_if value="$trade.buyer.isoperational and (not $trade.unbundle)">
          <add_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" amount="$amount" mission="$trade.ismission" />
        </do_if-->
      </do_else>
      
      <do_if value="not $non_shoppinglist_trade?">
      <!-- we have arrived, check if there is currently a tradeoffer matching the criteria defined by our shopping list -->
      <get_trade_from_shoppinglist object="this.ship" result="$trade2" />
        <do_if value="$trade == $trade2" negate="true">
          <!-- the current trade is no longer at the top of the shopping list -->
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade no longer on top of Shopping List - aborting'.[this.name,this.container.name]"/>
          <return/>
        </do_if>
        <remove_value name="$trade2"/>
      </do_if>
      
      <!-- to skip the moving/docking in case we are already docked at the right station - jumps forward from line 75 -->
      <label name="execute trade"/>
      <set_command_action commandaction="commandaction.executingtrade"/>
      <do_if value="this.$ut_cac?">
        <set_value name="this.$ut_cac.$isactive"/>
      </do_if>
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Executing Trade, Details:\nWare:%3 Amount:%4 Price:%5 Tradepartner:%6 in %7, this.money:%8'.[this.name,this.container.name,$trade.ware,$amount,$trade.price,$tradepartner.knownname,$tradepartner.zone.knownname,this.money]"/>
      <do_if value="$trade.seller.exists" comment="we want to buy something, look for sell offers">
        <do_if value="not $trade.ismission">
          <set_value name="$tradeoffer" exact="null"/>
          <find_sell_offer result="$tradeoffers" seller="$trade.seller" wares="$trade.ware" tradepartner="this.ship" multiple="true" >
            <offeramount min="$amount" entity="this" />
            <price max="$trade.unitprice"/>
          </find_sell_offer>
          <do_if value="$tradeoffers.count == 1">
            <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
          </do_if>
          <do_elseif value="$tradeoffers.count gt 1">
            <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
            <do_all exact="$tradeoffers.count" counter="$i">
              <do_if value="$tradeoffers.{$i}.offeramount.{this} ge $amount">
                <set_value name="$tradeoffer" exact="$tradeoffers.{$i}" />
              </do_if>
            </do_all>
          </do_elseif>
          <!-- check if we have valid results and make them "valid" if needed -->
          <do_if value="not $tradeoffer.available and not ($trade.owner == this.ship.commander)">
            <!-- no fitting Trade found -->
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Offer unavailable - use Trade Offer with highest amount instead and lower amount accordingly (buy case)'.[this.name,this.container.name]"/>
            <find_sell_offer result="$tradeoffers" seller="$trade.seller" wares="$trade.ware" tradepartner="this.ship" multiple="true" >
              <price max="$trade.unitprice"/>
            </find_sell_offer>
            <do_if value="$tradeoffers.count == 1">
              <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
              <set_value name="$amount" exact="$tradeoffer.amount"/>
            </do_if>
            <do_elseif value="$tradeoffers.count gt 1">
              <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
              <do_all exact="$tradeoffers.count" counter="$i">
                <do_if value="$tradeoffers.{$i}.offeramount.{this} gt $tradeoffer.amount">
                  <set_value name="$tradeoffer" exact="$tradeoffers.{$i}" />
                </do_if>
              </do_all>
              <set_value name="$amount" exact="$tradeoffer.amount"/>
            </do_elseif>
          </do_if>
          <do_if value="not $tradeoffer.available and not ($trade.owner == this.ship.commander)">
            <!-- no fitting Trade found -->
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Offerstill  unavailable - use Trade Offer with highest amount regardless of price and adjust amount to our budget (buy case)'.[this.name,this.container.name]"/>
            <find_sell_offer result="$tradeoffers" seller="$trade.seller" wares="$trade.ware" tradepartner="this.ship" multiple="true" />
            <do_if value="$tradeoffers.count == 1">
              <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
              <set_value name="$amount" exact="[$tradeoffer.amount,this.money/$tradeoffer.unitprice].min"/>
            </do_if>
            <do_elseif value="$tradeoffers.count gt 1">
              <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
              <do_all exact="$tradeoffers.count" counter="$i">
                <do_if value="$tradeoffers.{$i}.offeramount.{this} gt $tradeoffer.amount">
                  <set_value name="$tradeoffer" exact="$tradeoffers.{$i}" />
                </do_if>
              </do_all>
              <set_value name="$amount" exact="[$tradeoffer.amount,this.money/tradeoffer.unitprice].min"/>
            </do_elseif>
          </do_if>
          <do_elseif value="not ($trade.owner == this.ship.commander) and $tradeoffer.offeramount.{this} lt $amount">
            <!-- no Offer with enough Wares found -->
            <!-- ToDo: Adjust Amounts for this Trade and the next Selling Trade -->
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Offer amount too low - aborting'.[this.name,this.container.name]"/>
            <resume label="abort trade"/>
          </do_elseif>
          <do_if value="not $trade.buyfree and (this.money / 1Cr) lt ($trade.price / 1Cr)">
            <!-- we no longer have enough money in our account to make this purchase -->
            <!-- just grab some extra Funds from the Manager and check again -->
            <transfer_money from="this.container.commanderentity" to="this" amount="$trade.price - this.money"/>
            <do_if value="not $trade.buyfree and (this.money / 1Cr) lt ($trade.price / 1Cr)">
              <debug_text filter="error" text="'%1 %2 Not enough Money - aborting'.[this.name,this.container.name]"/>
              <resume label="abort trade"/>
            </do_if>
          </do_if>
        </do_if>
      </do_if>
      <do_else comment="we want to sell something">
        <do_if value="not $trade.ismission">
          <set_value name="$tradeoffer" exact="null"/>
          <find_buy_offer result="$tradeoffers" buyer="$trade.buyer" wares="$trade.ware" tradepartner="this.ship" multiple="true" >
            <offeramount min="$amount" entity="this" />
            <price min="$trade.unitprice"/>
          </find_buy_offer>
          <do_if value="$tradeoffers.count == 1">
            <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
          </do_if>
          <do_elseif value="$tradeoffers.count gt 1">
            <set_value name="$tradeoffer" exact="$tradeoffers.{1}" />
            <do_all exact="$tradeoffers.count" counter="$i">
              <do_if value="$tradeoffers.{$i}.offeramount.{this} ge $amount">
                <set_value name="$tradeoffer" exact="$tradeoffers.{$i}" />
              </do_if>
            </do_all>
          </do_elseif>
          <!-- check if we have valid results and make them "valid" if needed -->
          <do_if value="not $tradeoffer.available and not ($trade.owner == this.ship.commander)">
            <!-- no fitting Trade found -->
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Offer unavailable - setting our sheduled Trade as $tradeoffer to force using our reserved price (sell case)'.[this.name,this.container.name]"/>
            <set_value name="$tradeoffer" exact="$trade"/>
            <!--resume label="abort trade"/-->
          </do_if>
          <do_elseif value="not ($trade.owner == this.ship.commander) and $tradeoffer.offeramount.{this} lt $amount">
            <!-- buyer no longer buys the amount we want to sell -->
            <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Offer amount too low - aborting (2nd)'.[this.name,this.container.name]"/>
            <resume label="abort trade"/>
          </do_elseif>
        </do_if>
      </do_else>
      
      <!-- tradeoffer found, now transfer cargo -->
      <set_value name="$timeout" exact="player.age + 2h" />
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Commencing Ware Transfer \nWare: %3 Amount here: %4 Amount Partner: %5'.[this.name,this.container.name,$trade.ware,this.container.cargo.{$trade.ware}.count,$tradepartner.cargo.{$trade.ware}.count]"/>
      
      <!-- Script shouldnt be Interrupted/aborted at this point anymore -->
      <set_value name="$params.$interruptable" exact="false" chance="$params? * 100"/>
      
      <run_script sinceversion="20" chance="0" name="''"/>
      
      <do_if value="$tradeoffer.available and not $usecustomtrade">
        <!-- Hack/Fix: if we dont have Transport unitos of our own take one from Tradepartner -->
        <do_if value="this.ship.units.{unitcategory.transport}.count == 0 and $tradepartner.availableunits.{unitcategory.transport}.count gt 0">
          <set_value name="$unitmacro" exact="$tradepartner.availableunits.{unitcategory.transport}.list.random"/>
          <remove_units object="$tradepartner" macro="$unitmacro" exact="1"/>
          <add_units object="this.ship" macro="$unitmacro" exact="1"/>
        </do_if>
        <do_if value="$tradeoffer.seller.isoperational">
          <!-- BUY -->
          <remove_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" mission="$trade.ismission" virtual="$trade.unbundle" type="buy"/>
          <execute_trade tradeoffer="$tradeoffer" tradepartner="this.ship" amount="$amount" unbundle="$trade.unbundle" result="$traderesult">
            <interrupt_after_time time="121min" />
          </execute_trade>
        </do_if>
        <do_elseif value="$tradeoffer.buyer.isoperational">
          <!-- SELL -->
          <!-- ToDo: illegal ware check is for pussies - removed, will implement active search for illegal stuff at a later date. -->
          <!--set_value name="$policefaction" exact="this.zone.policefaction" />
          <do_if value="$policefaction">
            <do_if value="this.ship.cargo.illegalto.{$policefaction}">
              <resume label="illegalcargo" chance="10" />
            </do_if>
          </do_if-->
          <execute_trade tradeoffer="$tradeoffer" tradepartner="this.ship" amount="$amount" unbundle="$trade.unbundle" result="$traderesult">
            <interrupt_after_time time="121min" />
          </execute_trade>
          <remove_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" mission="$trade.ismission" type="sell"/>
        </do_elseif>
        <do_else>
          <!-- Trade Partner destroyed - continue with next Order -->
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Tradepartner destroyed - aborting'.[this.name,this.container.name]"/>
          <resume label="abort trade"/>
        </do_else>
        <!-- return lent units -->
        <do_if value="$unitmacro?">
          <remove_units object="this.ship" macro="$unitmacro" exact="1"/>
          <add_units object="$tradepartner" macro="$unitmacro" exact="1"/>
        </do_if>
      </do_if>
      <!-- just transfer the Wares if we didnt find an Offer and its for the Commande- orif its a Trade directly from the Shoppinglist -->
      <do_elseif value="$trade.owner == this.ship.commander or $tradeoffer == $trade or $usecustomtrade">
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 No offer found - Exchanging Wares'.[this.name,this.container.name]"/>
        <!-- Hack/Fix: if we dont have Transport unitos of our own take one from Tradepartner -->
        <do_if value="this.ship.units.{unitcategory.transport}.count == 0 and $tradepartner.availableunits.{unitcategory.transport}.count gt 0">
          <set_value name="$unitmacro" exact="$tradepartner.availableunits.{unitcategory.transport}.list.random"/>
          <remove_units object="$tradepartner" macro="$unitmacro" exact="1"/>
          <add_units object="this.ship" macro="$unitmacro" exact="1"/>
        </do_if>
        <do_if value="$trade.seller.isoperational">
          <remove_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" mission="$trade.ismission" virtual="$trade.unbundle" type="buy"/>
          <execute_custom_trade seller="$trade.seller" buyer="this.ship" ware="$trade.ware" amount="$amount" price="$trade.unitprice" result="$traderesult" unbundle="$trade.unbundle" usecommandermoney="false">
            <interrupt_after_time time="121 min"/>
          </execute_custom_trade>
        </do_if>
        <do_elseif value="$trade.buyer.isoperational">
          <execute_custom_trade seller="this.ship" buyer="$trade.buyer" ware="$trade.ware" amount="$amount" price="$trade.unitprice" result="$traderesult" unbundle="$trade.unbundle" usecommandermoney="false">
            <interrupt_after_time time="121 min"/>
          </execute_custom_trade>
          <remove_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" mission="$trade.ismission" type="sell"/>
        </do_elseif>
        <do_else>
          <!-- Trade Partner destroyed - continue with next Order -->
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Tradepartner destroyed - aborting (Custom Trade Case because no offer found)'.[this.name,this.container.name]"/>
          <resume label="abort trade"/>
        </do_else>
        <!-- return lent units -->
        <do_if value="$unitmacro?">
          <remove_units object="this.ship" macro="$unitmacro" exact="1"/>
          <add_units object="$tradepartner" macro="$unitmacro" exact="1"/>
        </do_if>
      </do_elseif>
      <do_else>
        <debug_text filter="error" text="'%1 %2 Neither Trade Offer available nor Ware Transfer - aborting\nWare: %3 Amount here: %4 Amount Partner: %5\nware:%6 amount:%7'.[this.name,this.container.name,$trade.ware,this.container.cargo.{$trade.ware}.count,$tradepartner.cargo.{$trade.ware}.count,$trade.ware,$amount]"/>
        <resume label="abort trade"/>
      </do_else>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade finished,\nWare: %3 Amount here: %4 Amount Partner: %5\n$traderesult: %6 ware:%7 amount:%8'.[this.name,this.container.name,$trade.ware,this.container.cargo.{$trade.ware}.count,$tradepartner.cargo.{$trade.ware}.count,$traderesult,$trade.ware,$amount]"/>
      
      <!-- since the Order is finished try to get some new Orders in advance if necesary - only if called with params param
      3 Possible Scenarios where this happens:
      A) Orderlist is completely empty
      B) One Order remaining in Orderlist - the current Order
      C) Two Orders remaining in Orderlist: current one on top, and refuel as second (because refuel may skip itself entirely)-->
      <do_if value="$params? and (this.$orderlist.count == 0 or ( this.$orderlist.count == 1 and $params == this.$orderlist.{1} ) or ( this.$orderlist.count == 2 and $params == this.$orderlist.{1} and this.$orderlist.{2}.$script == 'ut.cac.com.captain.refuel' ) )">
        <do_if value="this.ship.commanderentity? and this.ship.commanderentity.exists and this.ship.commanderentity.type == entitytype.manager">
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Requesting new Orders in advance (Manager Signal)'.[this.name,this.container.name]"/>
          <signal_objects object="this.ship.commanderentity" param="'request orders'" param2="this"/>
        </do_if>
        <do_elseif value="this.$ut_cac.$commanderentity? and this.$ut_cac.$commanderentity.exists and this.$ut_cac.$commanderentity.type == entitytype.manager">
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Requesting new Orders in advance (Fallback Manager Signal)'.[this.name,this.container.name]"/>
          <signal_objects object="this.$ut_cac.$commanderentity" param="'request orders'" param2="this"/>
        </do_elseif>
        <do_else>
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Requesting new Orders in advance (Script Call)'.[this.name,this.container.name]"/>
          <run_script name="this.$ut_cac.$defaultorders.$script" sinceversion="30">
            <param name="params" value="this.$ut_cac.$defaultorders"/>
          </run_script>
        </do_else>
      </do_if>
      <do_else>
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2  NOT Requesting new Orders: %3 and ( %4 or ( %5 and %6 ) or ( %7 and %8 and %9 ) )'.[this.name,this.container.name,$params? , this.$orderlist.count == 0 , this.$orderlist.count == 1 , $params == this.$orderlist.{1} , this.$orderlist.count == 2 , $params == this.$orderlist.{1} , this.$orderlist.{2}.$script == 'ut.cac.com.captain.refuel' ]"/>
      </do_else>
      
      <!-- If after execute there is no trade order(e.g. cleared by player) finish - should not happen since player is not supposed to remove trade Orders from CAC Ships! -->
      <do_if value="not $trade.exists">
        <detach_from_masstraffic object="this.ship" wait="true"/>
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade removed (should not happen with UT CAC since Player is not supposed to clear shoppinglist)'.[this.name,this.container.name]"/>
        <return/>
      </do_if>

      <do_if value="$traderesult and $tradeoffer.exists">
        <set_value name="$price" exact="0" />
        <do_if value="not $trade.iswareexchange">
          <set_value name="$price" exact="($trade.transferredamount + $trade.destroyedamount) * $trade.unitprice" />
        </do_if>
        <!-- Relation bonus for the player: Base bonus for the trade itself (max +1 UI value per 4 trades) and price-based bonus (max +1 UI value per 4M Credits) -->
        <add_faction_relation faction="$tradeoffer.buyer.owner" otherfaction="$tradeoffer.seller.owner" value="0.00016LF + (0.00064LF / (4000000Cr)LF * ($price)LF)" />
        <!-- store Trade Ware in Config Var to prefer frequently traded Wares -->
        <do_if value="this.$ut_cac?">
          <do_if value="this.$ut_cac.$lasttradewares?">
            <do_if value="this.$ut_cac.$lasttradewares.indexof.{$trade.ware}">
              <remove_value name="this.$ut_cac.$lasttradewares.this.$ut_cac.$lasttradewares.indexof.{$trade.ware}"/>
            </do_if>
            <set_value name="this.$ut_cac.$lasttradewares.{1}" operation="insert" exact="$trade.ware"/>
            <do_if value="this.$ut_cac.$lasttradewares.count gt 7">
              <resize_list list="this.$ut_cac.$lasttradewares" count="7"/>
            </do_if>
          </do_if>
        </do_if>
        <do_else>
          <set_value name="this.$ut_cac.$lasttradewares" exact="[$trade.ware]"/>
        </do_else>
      </do_if>

      <do_if value="not $tradepartner.isplayerowned and not $tradepartner.hastradesubscription">
        <!-- if a playership trades with an NPC station that doesn't have a trade subscription anyway, store one offer snapshot -->
        <store_trade_offer_snapshot object="$tradepartner" />
      </do_if>
      <!--do_if value="($tradepartner == $trade.buyer and $trade.unbundle) or ($tradepartner == $trade.seller and $trade.rebundle)">
        <remove_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" amount="$amount" virtual="true" mission="$trade.ismission" />
      </do_if>
      <do_else>
        <remove_ware_reservation object="$tradepartner" entity="this" ware="$trade.ware" amount="$amount" mission="$trade.ismission" />
      </do_else-->
      
      <detach_from_masstraffic object="this.ship">
        <interrupt_after_time time="20min"/>
      </detach_from_masstraffic>
      <!-- destroy all Drones still flying, subtract them from unavailable units and set all units as available -->
      <set_value name="$subordinates" exact="this.ship.subordinates"/>
      <do_all exact="$subordinates.count" counter="$i">
        <do_if value="$subordinates.{$i}.isclass.ship_xs and $subordinates.{$i}.macro.unitcategory == unitcategory.transport">
          <do_if value="this.ship.units.{$subordinates.{$i}.macro}.count">
            <remove_units object="this.ship" macro="$subordinates.{$i}.macro" unavailable="true"/>
            <destroy_object object="$subordinates.{$i}"/>
          </do_if>
        </do_if>
      </do_all>
      <create_list name="$unitlist" />
      <do_all exact="this.ship.units.{unitcategory.transport}.list.count" counter="$i">
        <append_to_list name="$unitlist" exact="this.ship.units.{unitcategory.transport}.list.{$i}"/>
      </do_all>
      <do_all exact="this.ship.units.{unitcategory.welder}.list.count" counter="$i">
        <append_to_list name="$unitlist" exact="this.ship.units.{unitcategory.welder}.list.{$i}"/>
      </do_all>
      <do_all exact="$unitlist.count" counter="$i">
        <return_units object="this.ship" macro="$unitlist.{$i}"/>
      </do_all>
      <detach_from_masstraffic object="this.ship"/>
      
      <do_if value="player.age ge $timeout">
        <!-- remove shoppinglist item, exit -->
        <remove_trade_order object="this.ship" trade="$trade"/>
        <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade Timeout - aborting'.[this.name,this.container.name]"/>
        <resume label="abort trade"/>
      </do_if>
      
      <do_if value="not $traderesult">
        <!-- TODO: ask player for help -->
        <do_if value="this.ship.commander == player.primaryship">
          <start_conversation actor="this" conversation="Speak" type="unqueued" convparam="1163" comment="We are unable to perform the requested trade operation, please advise." />
        </do_if>
        <!-- remove shoppinglist item, and check list again -->
        <debug_text filter="error" text="'%1 %2 Trade failed - aborting'.[this.name,this.container.name]"/>
        <resume label="abort trade"/>
      </do_if>

      <!-- wait a few seconds until current Trade is removed before continuing -->
      <do_if value="$trade.exists">
        <wait>
          <interrupt_after_time time="30s"/>
          <interrupt>
            <conditions>
              <event_object_shoppinglist_trade_removed object="this.ship" />
            </conditions>
          </interrupt>
        </wait>
      </do_if>
      <do_if value="$trade.exists and not $non_shoppinglist_trade?">
        <!--do_if value="this.container.commanderentity.exists" comment="teporarily transfer current Money to commander to avoid unneeeded Money Transfers to the Player">
          <set_value name="$money" exact="this.money"/>
          <transfer_money amount="$money" from="this" to="this.container.commanderentity"/>
          <remove_trade_order object="this.ship" trade="$trade"/>
          <transfer_money amount="$money" from="this.container.commanderentity" to="this"/>
        </do_if>
        <do_else-->
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade not removed automatically - clearing manually, Trade Data:\n$tradepartner: %3 $ware: %4 $amount: %5 seller: %6 buyer: %7'.[this.name,this.container.name,$tradepartner,$trade.ware,$amount,$trade.seller,$trade.buyer]"/>
          <remove_trade_order object="this.ship" trade="$trade"/>
        <!--/do_else-->
      </do_if>
      
      <!-- execute next Trade without undocking if the Trade partner is the same -->
      <do_if value="$undock==2">
        <get_trade_from_shoppinglist object="this.ship" result="$trade" />
        <do_if value="$trade.exists and $trade.owner == $tradepartner">
          <set_value name="$undock" exact="false"/>
        </do_if>
        <do_else>
          <set_value name="$undock" exact="true"/>
        </do_else>
      </do_if>
      
      <do_if value="(this.ship.isclass.ship_xl or this.ship.isclass.ship_l) and $undock">
        <run_script name="'ut.cac.move.undock'" />
      </do_if>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 Trade run succesful'.[this.name,this.container.name]"/>
      
      <return/>
      
      <label name="abort trade"/>
      <do_if value="this.container.commanderentity.exists" comment="teporarily transfer current Money to commander to avoid unneeeded Money Transfers to the Player">
        <transfer_money amount="$trade.price" from="this" to="this.container.commanderentity"/>
      </do_if>
      <do_if value="$trade.exists and not $non_shoppinglist_trade?">
        <remove_trade_order object="this.ship" trade="$trade"/>
      </do_if>
      
      <!-- Undocking in Abort Case -->
      <!-- execute next Trade without undocking if the Trade partner is the same -->
      <do_if value="$undock==2">
        <get_trade_from_shoppinglist object="this.ship" result="$trade" />
        <do_if value="$trade.exists and $trade.owner == $tradepartner">
          <set_value name="$undock" exact="false"/>
        </do_if>
        <do_else>
          <set_value name="$undock" exact="true"/>
        </do_else>
      </do_if>
      
      <do_if value="(this.ship.isclass.ship_xl or this.ship.isclass.ship_l) and $undock">
        <run_script name="'ut.cac.move.undock'" sinceversion="30" />
      </do_if>
      <return/>
      
    </actions>
  </attention>
  <on_abort>
    <disconnect_from_trade_location ship="this.ship" />
    <set_avoid_collisions object="this.ship" enabled="true" />
    <clear_collision_filter object="this.ship"/>
  </on_abort>
</aiscript>
