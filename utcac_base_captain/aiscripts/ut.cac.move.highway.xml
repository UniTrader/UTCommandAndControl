<?xml version="1.0" encoding="UTF-8" ?>
<aiscript name="ut.cac.move.to.pos" version="30" priority="10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
  <!--

 rewritten from scratch by UniTrader
  
 Routine for Moving InZone to:
 -> an exact Position (if its safe)
 -> near an Object
 -> to a Position relative to an Object
with a given Rotation or Orientation

  -->
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
    <param name="highway" default="null" comment="highway to enter - will enter at the closest possible position"/>
    <param name="destination" default="null" comment="Exit Zone or Object - will exit at the closest Position (null or $highway.destination to follow till the very end)"/>
    <!-- Group Movement stuff -->
    <param name="leader" default="null" comment="the formation leader/object which coordinates the Movement"/>
    <param name="leader_preparegroup" default="null" comment="the group of Ships the Leader waits for"/>
    <param name="waitforleader" default="true" comment="if we are a follower and arrive at the waypoint earlier than the leader then wait for him there until he arrived, too"/>
  </params>
  <attention min="unknown">
    <actions>
      <!-- first decode the $params to the Variables -->
      <do_if value="$params">
        <do_if value="$params.$highway?">
          <set_value name="$highway" exact="$params.$highway"/>
        </do_if>
        <do_if value="$params.$destination?">
          <set_value name="$destination" exact="$params.$destination"/>
        </do_if>
      </do_if>
      
      <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 Script started with Params:\n$highway: %4 , $destination: %5 , $rotation: %6 , $lookat: %7 , $forceendpos: %8'.[player.age,this.name,this.container.name,$highway,$destination]"/>
      
      <!-- Verify Input and Situation -->
      <!-- verify highway input -->
      <do_if value="not $highway.isclass.highway">
        <debug_text filter="error" text="'%1 %2 %3 Invalid Highway to enter passed! %4'.[player.age,this.name,this.container.name,$highway]"/>
        <return/>
      </do_if>
      <!-- get Destination Zone (and destination if not supplied)-->
      <do_if value="$destination == null">
        <set_value name="$destination" exact="$highway.destination"/>
      </do_if>
      <do_if value="$destination.isclass.zone">
        <set_value name="$destinationzone" exact="$destination"/>
      </do_if>
      <do_else>
        <set_value name="$destinationzone" exact="$destination.zone"/>
      </do_else>
      <!-- if there is a Destination Zone check if its either a Waypoint or the Destination of the Tube -->
      <do_if value="$highway.junctions.indexof.{$destinationzone} or $highway.destination == $destinationzone" negate="true">
        <debug_text filter="error" text="'%1 %2 %3 Destinationzone not part of Highway Junctions! %4 %5 != %6'.[player.age,this.name,this.container.name,$highway.junctions,$highway.destination,$destinationzone]"/>
        <return/>
      </do_if>
      <!-- check if we are near enough to the Highway -->
      <!-- innitial Fly-to-highway NYI - this part is not required yet. -->
      
      
      <set_command_action commandaction="commandaction.flyingto" param="$destination"/>
      <do_if value="this.$ut_cac?">
        <set_value name="this.$ut_cac.$isactive"/>
      </do_if>
      <!-- experimental: fly into closest tube, fly to offset closest to destination and exit there -->
      <get_closest_highway_offset result="$highwayoffsetstart" highway="$highway" space="this.zone">
        <position value="this.ship.position"/>
      </get_closest_highway_offset>
      <do_if value="not $destination.isclass.zone">
        <get_closest_highway_offset result="$highwayoffsetend" highway="$highway" space="$destinationzone">
          <position value="$destination.position"/>
        </get_closest_highway_offset>
      </do_if>
      <debug_text filter="general" text="'%1 %2 %3 Highway Offset Start: %4 End: %5'.[player.age,this.name,this.container.name,$highwayoffsetstart,@$highwayoffsetend]"/>
      <move_to object="this.ship" destination="$highway" usehighways="true" abortpath="false" finishonapproach="true">
        <position value="$highwayoffsetstart"/>
      </move_to>
      <!-- move to closest part of highway to the destination -->
      <do_if value="$highwayoffsetend?">
      <move_to object="this.ship" destination="$highway" usehighways="true" abortpath="false" finishonapproach="true">
        <position value="$highwayoffsetend"/>
      </move_to>
      </do_if>
      
      <!-- exit highway -->
      <move_to object="this.ship" destination="$destination" usehighways="true" abortpath="false" forceposition="false">
        <position value="position.[0,0,0]" />
        <interrupt>
          <conditions>
            <event_object_changed_zone object="this.ship" zone="$destinationzone" />
          </conditions>
        </interrupt>
      </move_to>
      
      
    </actions>
  </attention>
  <on_abort>
    <!-- No Group Coordination Stuff yet - no need to clean up.
    <remove_from_group group="$leader_preparegroup" object="this.ship"/>
    <do_if value="$leader.exists">
      <signal_objects object="$leader" param="'preparegroup shrunk'"/>
    </do_if>
    -->
  </on_abort>
</aiscript>
