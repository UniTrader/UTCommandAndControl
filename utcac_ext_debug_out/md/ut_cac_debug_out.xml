<?xml version="1.0" encoding="UTF-8"?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="UT_CAC_Debug_Out" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/md.xsd">
  <cues>
    <cue name="Debug_On">
      <conditions>
        <check_any>
          <check_all>
            <event_object_changed_room object="player.entity"/>
            <check_value value="player.entity.container != player.primaryship"/>
          </check_all>
          <check_all>
            <event_autopilot_target_set/>
            <check_value value="event.param.isclass.ship_xs or event.param.isclass.ship_s or event.param.isclass.ship_m"/>
          </check_all>
        </check_any>
      </conditions>
      <actions>
        <remove_help all="true"/>
        <do_if value="event.name == 'event_object_changed_room'">
          <set_value name="$debug_object" exact="player.entity.container"/>
        </do_if>
        <do_elseif value="event.name == 'event_autopilot_target_set'">
          <set_value name="$debug_object" exact="event.param"/>
        </do_elseif>
        <show_help custom="'Debug Events registered to \n%1'.[$debug_object.knownname]" position="11" duration="20s"/>
        <reset_cue cue="Debug_Off"/>
      </actions>
      <cues>
        <cue name="Debug_events" instantiate="true">
          <conditions>
            <check_any>
              <event_object_approaching_waypoint object="$debug_object"/>
              <event_object_arrived_at_waypoint object="$debug_object"/>
              <event_object_attacked object="$debug_object"/>
              <event_object_collided object="$debug_object"/>
              <event_object_enemy_found object="$debug_object"/>
              <event_object_incoming_missile object="$debug_object"/>
              <event_object_killed_object object="$debug_object"/>
              <event_object_launched_missile object="$debug_object"/>
              <event_object_signalled object="$debug_object"/>
            </check_any>
          </conditions>
          <actions>
            <!-- make params readable if possible -->
            <substitute_text text="$eventname" source="event.name">
              <replace string="'event_object_'" with="'e_o_'"/>
              <replace string="'event_player_'" with="'e_p_'"/>
            </substitute_text>
            <set_value name="$objectname" exact="if event.object.controlentity.$shortname? then event.object.controlentity.$shortname else event.object.knownname"/>
            <set_value name="$param" exact="event.param + ''"/>
            <set_value name="$param" exact="event.param + ''"/>
            <set_value name="$param2" exact="event.param2 + ''"/>
            <set_value name="$param3" exact="event.param3 + ''"/>
            <!-- Object Params - print Name -->
            <do_if value="typeof event.param == datatype.component">
              <set_value name="$param" exact="if event.param.controlentity.$shortname? then event.param.controlentity.$shortname else event.param.knownname"/>
            </do_if>
            <do_if value="typeof event.param2 == datatype.component">
              <set_value name="$param2" exact="if event.param2.controlentity.$shortname? then event.param2.controlentity.$shortname else event.param2.knownname"/>
            </do_if>
            <do_if value="typeof event.param3 == datatype.component">
              <set_value name="$param3" exact="if event.param3.controlentity.$shortname? then event.param3.controlentity.$shortname else event.param3.knownname"/>
            </do_if>
            <do_if value="event.param != 'Object Name Updated'" comment="far too frequent - ignore"/>
            <do_if value="event.name == 'event_object_signalled' and not player.isinconversation" comment=" only when player is not in conversation to avoid many poing up messages after end - fall back to help popup">
              <show_notification caption="player.age + ' / ' + $param" details="[$param2,'','#####################',$param3]" priority="999" timeout="3s" queued="true"/>
            </do_if>
            <do_else>
              <remove_help all="true"/>
              <show_help custom="'%1\n%2\n%3\n%4\n%5\n%6'.[player.age,$eventname,$objectname,$param,$param2,$param3]" position="11" duration="20s"/>
            </do_else>
          </actions>
        </cue>
        <cue name="Keep_following" onfail="cancel">
          <conditions>
            <check_value value="player.autopilottarget.exists and ( player.autopilottarget.isclass.ship_xs or player.autopilottarget.isclass.ship_s or player.autopilottarget.isclass.ship_m )"/>
          </conditions>
          <cues>
            <cue name="Follow_again" instantiate="true">
              <conditions>
                <event_object_undocked object="$debug_object"/>
              </conditions>
              <actions>
                <start_player_autopilot destination="$debug_object"/>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </cue>
    <cue name="Debug_Off" comment="Player Undocked: stop Platform Scripts and reset cue for player wait until docked again">
      <conditions>
        <check_any>
          <check_all>
            <event_object_changed_room object="player.entity"/>
            <check_value value="player.entity.container == player.primaryship" comment="Only if player is on his ship"/>
          </check_all>
          <check_all>
            <event_player_cycled_weapons/>
            <check_value value="player.autopilottarget.exists and ( player.autopilottarget.isclass.ship_xs or player.autopilottarget.isclass.ship_s or player.autopilottarget.isclass.ship_m )"/>
          </check_all>
        </check_any>
      </conditions>
      <actions>
        <remove_help all="true"/>
        <show_help custom="'Debug Events unregistered'" position="11" duration="20s"/>
        <reset_cue cue="Debug_On"/>
      </actions>
    </cue>
  </cues>
</mdscript>
